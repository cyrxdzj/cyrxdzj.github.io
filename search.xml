<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>洛谷CF1542A题解</title>
      <link href="/2021-07-04-LuoguCF1542ATJ/"/>
      <url>/2021-07-04-LuoguCF1542ATJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><p><a href="https://www.luogu.com.cn/paste/uri49gck">在这里！</a></p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>给出一张加法的奇偶性的表格：</p><div class="table-container"><table><thead><tr><th style="text-align:center">第 $1$ 个加数</th><th style="text-align:center">第 $2$ 个加数</th><th style="text-align:center">最终结果</th></tr></thead><tbody><tr><td style="text-align:center">偶数</td><td style="text-align:center">偶数</td><td style="text-align:center">偶数</td></tr><tr><td style="text-align:center">偶数</td><td style="text-align:center">奇数</td><td style="text-align:center">奇数</td></tr><tr><td style="text-align:center">奇数</td><td style="text-align:center">偶数</td><td style="text-align:center">奇数</td></tr><tr><td style="text-align:center">奇数</td><td style="text-align:center">奇数</td><td style="text-align:center">偶数</td></tr></tbody></table></div><p>可以看出，两个数当且仅当一个为偶数而另一个为奇数时，和才有可能为奇数。</p><p>因此，如果输入的数中的偶数数量与奇数数量相等，则可以输出 <code>Yes</code>，否则输出 <code>No</code>。</p><p>维护两个计数器即可。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> case_num<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>case_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> case_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>case_id<span class="token operator">&lt;=</span>case_num<span class="token punctuation">;</span>case_id<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> cnt1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>cnt2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//两个计数器。</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> x<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cnt1<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>cnt2<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>cnt1<span class="token operator">==</span>cnt2<span class="token punctuation">)</span><span class="token comment">//判断。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Yes\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"No\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷B2030题解</title>
      <link href="/2021-07-03-LuoguB2030TJ/"/>
      <url>/2021-07-03-LuoguB2030TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>计算两点之间的距离公式：$\sqrt{(X_a-X_b)^2+(Y_a-Y_b)^2}$。</p><p>根据此公式计算即可。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iomanip></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cmath></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">double</span> xa<span class="token punctuation">,</span>ya<span class="token punctuation">,</span>xb<span class="token punctuation">,</span>yb<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cin<span class="token operator">>></span>xa<span class="token operator">>></span>ya<span class="token operator">>></span>xb<span class="token operator">>></span>yb<span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>fixed<span class="token operator">&lt;&lt;</span><span class="token function">setprecision</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>xa<span class="token operator">-</span>xb<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>xa<span class="token operator">-</span>xb<span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>ya<span class="token operator">-</span>yb<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>ya<span class="token operator">-</span>yb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00855题解</title>
      <link href="/2021-07-03-LuoguUVA00855TJ/"/>
      <url>/2021-07-03-LuoguUVA00855TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题其实与<a href="https://www.luogu.com.cn/problem/UVA10041">这道题</a>非常相似，只是换成二维的而已。</p><p>因此，我们可以先求出所有 $x$ 的中位数，再求出所有 $y$ 的中位数，即可。</p><p><a href="https://baidu.physton.com/?q=%E4%B8%AD%E4%BD%8D%E6%95%B0">什么是中位数？</a></p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> x<span class="token punctuation">[</span><span class="token number">50001</span><span class="token punctuation">]</span><span class="token punctuation">,</span>y<span class="token punctuation">[</span><span class="token number">50001</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> case_num<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>case_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>case_num<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> s<span class="token punctuation">,</span>a<span class="token punctuation">,</span>f<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>s<span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span><span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//其实s和a并没有什么用处，只是暴力搜索的参考。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>f<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>x<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>y<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">sort</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token operator">+</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对x排序。</span><span class="token function">sort</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token operator">+</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对y排序。</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"(Street: %d, Avenue: %d)\n"</span><span class="token punctuation">,</span>x<span class="token punctuation">[</span><span class="token punctuation">(</span>f<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>y<span class="token punctuation">[</span><span class="token punctuation">(</span>f<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//求中位数&amp;输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷B2004题解</title>
      <link href="/2021-07-03-LuoguB2004TJ/"/>
      <url>/2021-07-03-LuoguB2004TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>可以使用 <code>printf</code> 函数的 <code>%&lt;width&gt;&lt;type&gt;</code> 格式设，其中 <code>&lt;width&gt;</code> 代表输出宽度（可以不写），<code>&lt;type&gt;</code> 代表输出类型。</p><p>这里给出几个：</p><div class="table-container"><table><thead><tr><th style="text-align:right">类型</th><th style="text-align:right">类型代号</th></tr></thead><tbody><tr><td style="text-align:right"><code>int</code></td><td style="text-align:right"><code>d</code></td></tr><tr><td style="text-align:right"><code>long long</code></td><td style="text-align:right"><code>lld</code></td></tr><tr><td style="text-align:right"><code>char</code> 字符</td><td style="text-align:right"><code>c</code></td></tr></tbody></table></div><p>本题按照题意使用 <code>%8lld</code> 输出即可，注意需要使用 <code>long long</code>。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld%lld%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span><span class="token operator">&amp;</span>b<span class="token punctuation">,</span><span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入。</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%8lld %8lld %8lld"</span><span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 输出格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷B2027题解</title>
      <link href="/2021-07-03-LuoguB2027TJ/"/>
      <url>/2021-07-03-LuoguB2027TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>这道题使用题中给出的公式去算即可。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iomanip></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">double</span> pie<span class="token operator">=</span><span class="token number">3.14</span><span class="token punctuation">;</span><span class="token keyword">int</span> r<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cin<span class="token operator">>></span>r<span class="token punctuation">;</span><span class="token comment">//输入。</span>    cout<span class="token operator">&lt;&lt;</span>fixed<span class="token operator">&lt;&lt;</span><span class="token function">setprecision</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment">/*设置小数点位数*/</span><span class="token operator">&lt;&lt;</span>pie<span class="token operator">*</span>r<span class="token operator">*</span>r<span class="token operator">*</span>r<span class="token operator">*</span><span class="token number">4</span><span class="token operator">/</span><span class="token number">3</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//输出。</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷B2025题解</title>
      <link href="/2021-07-03-LuoguB2025TJ/"/>
      <url>/2021-07-03-LuoguB2025TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>按照题目要求输出即可。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"  *\n ***\n*****\n ***\n  *"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/52317698">https://www.luogu.com.cn/record/52317698</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷B2033题解</title>
      <link href="/2021-07-03-LuoguB2033TJ/"/>
      <url>/2021-07-03-LuoguB2033TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>首先，读入两个数。</p><p>然后，输出两个数之积。</p><p>注意，结果可能会爆 <code>int</code>，所以需要使用 <code>long long</code>。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> a<span class="token punctuation">,</span>b<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入。</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>a<span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/52317521">https://www.luogu.com.cn/record/52317521</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0088A题解</title>
      <link href="/2021-07-02-LuoguCF0088ATJ/"/>
      <url>/2021-07-02-LuoguCF0088ATJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题其实涉及乐理知识。不过稍微了解一下就好了。</p><p>每个音符的编号对应表：</p><div class="table-container"><table><thead><tr><th style="text-align:center">音符</th><th style="text-align:center">编号</th></tr></thead><tbody><tr><td style="text-align:center">$C$</td><td style="text-align:center">$1$</td></tr><tr><td style="text-align:center">$C#$</td><td style="text-align:center">$2$</td></tr><tr><td style="text-align:center">$D$</td><td style="text-align:center">$3$</td></tr><tr><td style="text-align:center">$D#$</td><td style="text-align:center">$4$</td></tr><tr><td style="text-align:center">$E$</td><td style="text-align:center">$5$</td></tr><tr><td style="text-align:center">$F$</td><td style="text-align:center">$6$</td></tr><tr><td style="text-align:center">$F#$</td><td style="text-align:center">$7$</td></tr><tr><td style="text-align:center">$G$</td><td style="text-align:center">$8$</td></tr><tr><td style="text-align:center">$G#$</td><td style="text-align:center">$9$</td></tr><tr><td style="text-align:center">$A$</td><td style="text-align:center">$10$</td></tr><tr><td style="text-align:center">$B$</td><td style="text-align:center">$11$</td></tr><tr><td style="text-align:center">$H$</td><td style="text-align:center">$12$</td></tr></tbody></table></div><p>把输入的音符从大到小排序，并根据题意计算相邻两个音符编号之差，再根据题意输出 <code>major</code>、<code>minor</code> 或 <code>strange</code>。</p><p>需要注意，如果一次匹配不成功，则需要将最小的音符升八度（编号加 $12$），并再次排序、匹配。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">get_id</span><span class="token punctuation">(</span>string str<span class="token punctuation">)</span><span class="token comment">//获取音符编号。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"C#"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"D#"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"E"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"F"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">6</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"F#"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">7</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"G"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"G#"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"A"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">11</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token operator">==</span><span class="token string">"H"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">12</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>string input<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> id<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cin<span class="token operator">>></span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>id<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">get_id</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">sort</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>id<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//排序。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>id<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>id<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">4</span><span class="token operator">&amp;&amp;</span>id<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>id<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment">//匹配大调。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"major"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>id<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>id<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">3</span><span class="token operator">&amp;&amp;</span>id<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>id<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment">//匹配小调。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"minor"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token comment">//未成功匹配。</span><span class="token punctuation">&#123;</span>id<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+=</span><span class="token number">12</span><span class="token punctuation">;</span><span class="token function">sort</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>id<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//重新排序。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"strange"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/52303007">https://www.luogu.com.cn/record/52303007</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA10041题解</title>
      <link href="/2021-07-02-LuoguUVA10041TJ/"/>
      <url>/2021-07-02-LuoguUVA10041TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>首先将输入排序，然后求出房子的位置的<a href="https://baidu.physton.com/?q=%E4%B8%AD%E4%BD%8D%E6%95%B0">中位数</a>，最后求出其他的每个房子与此房子的距离之和，就可以了。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> input<span class="token punctuation">[</span><span class="token number">30005</span><span class="token punctuation">]</span><span class="token punctuation">,</span>case_num<span class="token punctuation">,</span>n<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>case_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>case_num<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">sort</span><span class="token punctuation">(</span>input<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>input<span class="token operator">+</span><span class="token number">1</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//排序。</span><span class="token keyword">int</span> mid<span class="token operator">=</span>input<span class="token punctuation">[</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//求中位数。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//累加。</span><span class="token punctuation">&#123;</span>sum<span class="token operator">+=</span><span class="token punctuation">(</span>mid<span class="token operator">-</span>input<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>sum<span class="token operator">+=</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">-</span>mid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/52298360">https://www.luogu.com.cn/record/52298360</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷2021年05月月赛参加总结</title>
      <link href="/2021-07-02-LuoguMonthlyCompetition202105Summary/"/>
      <url>/2021-07-02-LuoguMonthlyCompetition202105Summary/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>洛谷每个月都会举办月赛，这次我参加的是 $Div.2$（实力不允许）。</p><p>以下只讲我会做的题目。</p><h3 id="二、A：「MCOI-05」饱食"><a href="#二、A：「MCOI-05」饱食" class="headerlink" title="二、A：「MCOI-05」饱食"></a>二、A：「MCOI-05」饱食</h3><p>传送门：<a href="https://www.luogu.com.cn/problem/P7566?contestId=30514">https://www.luogu.com.cn/problem/P7566?contestId=30514</a></p><p>对于这道题，我估计大家一定会先想到 $DFS$ 死算。其实这完全没有必要，可以统计每只兔子的名字的首字母的出现次数，然后关注“M”“C”“O”“I”四个字母的出现次数。</p><p>$AC$ 代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> rabbit_capital<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> temp<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>rabbit_capital<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'M'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'O'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">+</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'I'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'O'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">+</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'M'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'I'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">+</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'M'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'I'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'O'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>记录：<a href="https://www.luogu.com.cn/record/50155330">https://www.luogu.com.cn/record/50155330</a>。</p><p>注意开 <code>long long</code>！正如一句话所言，十年 OI 一场空，不开 <code>long long</code> 见祖宗。</p><h3 id="三、B：「MCOI-05」魔仙"><a href="#三、B：「MCOI-05」魔仙" class="headerlink" title="三、B：「MCOI-05」魔仙"></a>三、B：「MCOI-05」魔仙</h3><p>传送门：<a href="https://www.luogu.com.cn/problem/P7567?contestId=30514">https://www.luogu.com.cn/problem/P7567?contestId=30514</a></p><p>这道题其实是有规律的。</p><p>首先，若这个数不能被4整除，必无解。</p><p>若这个数能被4整除，必有解。至于规律，见代码。</p><p>$AC$ 代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>t<span class="token punctuation">;</span><span class="token keyword">int</span> magic<span class="token punctuation">[</span><span class="token number">1000005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//cin>>t;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> time<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>time<span class="token operator">&lt;</span>t<span class="token punctuation">;</span>time<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//cin>>n;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">4</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"w33zAKIOI\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">8</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"2 %d"</span><span class="token punctuation">,</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> prt_cnt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token operator">+</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" -1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>prt_cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token operator">-</span>prt_cnt<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" %d"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"-2 %d"</span><span class="token punctuation">,</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> prt_cnt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" -1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>prt_cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token operator">-</span>prt_cnt<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" %d"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>记录：<a href="https://www.luogu.com.cn/record/50155828">https://www.luogu.com.cn/record/50155828</a>。</p><h3 id="四、总分"><a href="#四、总分" class="headerlink" title="四、总分"></a>四、总分</h3><p>这场比赛我共获得 $215$ 分（$D$ 题骗了 $15$ 分），第 $110$ 名。</p><p><img src="https://z3.ax1x.com/2021/07/02/Rcd4sO.png" alt=""></p><h3 id="五、花絮"><a href="#五、花絮" class="headerlink" title="五、花絮"></a>五、花絮</h3><p>前面说过，我在 $D$ 题骗了 $15$ 分，而我手欠也报了 $Div.1$，惊讶地发现 $Div.2$ 的后两题就是 $Div.1$ 的前两题。</p><p>于是，我把 $Div.2$ 的 $D$ 题骗分代码照搬到 $Div.1$ 的 $B$ 题，也成功地拿到了 $15$ 分。</p><p><img src="https://z3.ax1x.com/2021/07/02/RcwFWq.png" alt=""></p><p>$Div.2$ 的 $D$ 题的骗分代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>k<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">,</span><span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>m<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"YES\n\n1 1\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">3</span><span class="token operator">&amp;&amp;</span>m<span class="token operator">==</span><span class="token number">3</span><span class="token operator">&amp;&amp;</span>k<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">||</span>k<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NO\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">6</span><span class="token operator">&amp;&amp;</span>m<span class="token operator">==</span><span class="token number">4</span><span class="token operator">&amp;&amp;</span>k<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"YES\nRRRDLLLDRRRDLLLDRRRDLLL\n1 1\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NO\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">></span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>k<span class="token operator">&lt;=</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NO\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"YES\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">!=</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n1 1\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n1 1\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">></span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>k<span class="token operator">&lt;=</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NO\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"YES\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"U"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">!=</span>m<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n1 1\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"U"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n1 1\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><del>要不是题目开了 <code>Subtask</code>，我还能骗更多分。</del></p><h3 id="六、后记"><a href="#六、后记" class="headerlink" title="六、后记"></a>六、后记</h3><p>这次 $05$ 月月赛起码比上次 $04$ 月月赛的 $100/400$ 分好多了。</p><p><img src="https://z3.ax1x.com/2021/07/02/RcwZOU.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 洛谷比赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00146题解</title>
      <link href="/2021-07-02-LuoguUVA00146TJ/"/>
      <url>/2021-07-02-LuoguUVA00146TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题其实是求一个只包含小写字母的字符串，求这个字符串的字典序的下一个字符串。</p><p>使用 <code>STL</code> 库中的 <code>next_permutation</code> 即可。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>string input<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>cin<span class="token operator">>></span>input<span class="token operator">&amp;&amp;</span>input<span class="token operator">!=</span><span class="token string">"#"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">next_permutation</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>input<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span>input<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//有解输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"No Successor"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//无解输出。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/52127054">https://www.luogu.com.cn/record/52127054</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> C++ STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA11850题解</title>
      <link href="/2021-07-02-LuoguUVA11850TJ/"/>
      <url>/2021-07-02-LuoguUVA11850TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><p><a href="https://www.luogu.com.cn/discuss/show/322872">在这里！</a></p><p>题目翻译由 <a href="https://www.luogu.com.cn/user/387840">dengziyue</a> 大佬提供，感谢他的贡献。</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>本题可以暴力+模拟。先设一个布尔值数组，记录这个位置有没有充电站。</p><p>然后暴力模拟每一英里的情况，设一个变量表示当前车辆电量。</p><p>如果这一英里存在充电站，则将电量置为 $200$，否则将电量减 $1$。</p><p>如果在某一时刻电量小于 $0$，就说明无法达到目的。如果直到模拟结束都还没有出现电量不足，则说明可以达到目的。</p><p>由此，我们就可以得出完整代码。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>n<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">bool</span> electricity_station<span class="token punctuation">[</span><span class="token number">1422</span><span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//充电站。</span><span class="token keyword">bool</span> flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//是否达到目的的标志。</span><span class="token function">memset</span><span class="token punctuation">(</span>electricity_station<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>electricity_station<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> input<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>electricity_station<span class="token punctuation">[</span>input<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> now_electricity<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">1422</span><span class="token operator">&amp;&amp;</span>flag<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//去程。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>electricity_station<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>now_electricity<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>now_electricity<span class="token operator">--</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>now_electricity<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1422</span><span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>flag<span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token comment">//回程。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>electricity_station<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>now_electricity<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>now_electricity<span class="token operator">--</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>now_electricity<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">//输出。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"POSSIBLE\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"IMPOSSIBLE\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>其实我在提交上面的代码时还担心会不会 TLE，结果一次通过。</p><p>记录：<a href="https://www.luogu.com.cn/record/52097876">https://www.luogu.com.cn/record/52097876</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA01237题解</title>
      <link href="/2021-07-02-LuoguUVA01237TJ/"/>
      <url>/2021-07-02-LuoguUVA01237TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><p><a href="https://www.luogu.com.cn/paste/ji1lp4pi">在这里！</a></p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>暴力匹配即可。如果只有一个符合要求，输出汽车制造商名称。否则输出 <code>UNDETERMINED</code>。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">data</span><span class="token comment">//数据结构体。</span><span class="token punctuation">&#123;</span>string name<span class="token punctuation">;</span><span class="token keyword">int</span> low<span class="token punctuation">,</span>high<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>database<span class="token punctuation">[</span><span class="token number">10001</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> case_num<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cin<span class="token operator">>></span>case_num<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> case_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>case_id<span class="token operator">&lt;=</span>case_num<span class="token punctuation">;</span>case_id<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>case_id<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//对付UVA毒瘤输出。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> data_num<span class="token punctuation">,</span>query_num<span class="token punctuation">;</span>cin<span class="token operator">>></span>data_num<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>data_num<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cin<span class="token operator">>></span>database<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token operator">>></span>database<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>low<span class="token operator">>></span>database<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>high<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>cin<span class="token operator">>></span>query_num<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>query_num<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> query_input<span class="token punctuation">,</span>query_result<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>cin<span class="token operator">>></span>query_input<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>data_num<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>database<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>low<span class="token operator">&lt;=</span>query_input<span class="token operator">&amp;&amp;</span>query_input<span class="token operator">&lt;=</span>database<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>high<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>query_result<span class="token punctuation">)</span><span class="token comment">//有多个符合要求的输出。</span><span class="token punctuation">&#123;</span>query_result<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>query_result<span class="token operator">=</span>j<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>query_result<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//没有或有多个符合要求的输出。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"UNDETERMINED"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span>database<span class="token punctuation">[</span>query_result<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/52052941">https://www.luogu.com.cn/record/52052941</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00414题解</title>
      <link href="/2021-07-02-LuoguUVA00414TJ/"/>
      <url>/2021-07-02-LuoguUVA00414TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><p><a href="https://www.luogu.com.cn/paste/thmzsbqi">在这里！</a></p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>我们可以求出每一行的空格数量，然后取最小值，这个最小值决定了右表面的最大移动距离。</p><p>然后，将每一行的空格数量减去空格数量最小值加起来，即为答案。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> MAXN<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">;</span><span class="token keyword">bool</span> input_array<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//输入数组。</span><span class="token keyword">int</span> space_num<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//每行的空格数量。</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> a<span class="token operator">&lt;</span>b<span class="token operator">?</span>a<span class="token operator">:</span>b<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span>cin<span class="token operator">>></span>n<span class="token operator">&amp;&amp;</span>n<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">memset</span><span class="token punctuation">(</span>input_array<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>input_array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//重置为0。</span><span class="token function">memset</span><span class="token punctuation">(</span>space_num<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>space_num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>string input_str<span class="token punctuation">;</span><span class="token keyword">int</span> min_space_num<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span>input_str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span>input_str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">25</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>input_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>input_str<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'X'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>input_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>space_num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>min_space_num<span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>min_space_num<span class="token punctuation">,</span>space_num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//求空格数量最小值。</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//计算答案。</span><span class="token punctuation">&#123;</span>ans<span class="token operator">+=</span><span class="token punctuation">(</span>space_num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>min_space_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/52028237">https://www.luogu.com.cn/record/52028237</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00459题解</title>
      <link href="/2021-07-02-LuoguUVA00459TJ/"/>
      <url>/2021-07-02-LuoguUVA00459TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><p><a href="https://www.luogu.com.cn/paste/r4lua1q2">在这里！</a></p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>典型的并查集。</p><p>首先，将 <code>ans</code> 设为节点数量。</p><p>然后，对于每个连接：</p><ul><li><p>如果两个节点已经连接，忽略此输入。</p></li><li><p>如果两个节点没有连接，则使用并查集连接两个节点，并将 <code>ans</code> 减 $1$。</p></li></ul><p>最后，输出 <code>ans</code>。</p><p>需要特别注意 <code>UVA</code> 的毒瘤输出。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> father<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//并查集数组。</span><span class="token keyword">int</span> case_num<span class="token punctuation">;</span><span class="token comment">//测试用例数量。</span><span class="token keyword">int</span> <span class="token function">find_father</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token comment">//寻找并查集祖先。</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> father<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">find_father</span><span class="token punctuation">(</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//路径压缩。</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cin<span class="token operator">>></span>case_num<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> case_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>case_id<span class="token operator">&lt;=</span>case_num<span class="token punctuation">;</span>case_id<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>case_id<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//对付UVA的毒瘤输出。</span>        <span class="token punctuation">&#123;</span>            cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        string max_char<span class="token punctuation">;</span><span class="token comment">//最大字母。</span>        cin<span class="token operator">>></span>max_char<span class="token punctuation">;</span>        <span class="token keyword">int</span> char_num<span class="token operator">=</span>max_char<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//根据最大字母算出节点数量。</span>        <span class="token keyword">int</span> ans<span class="token operator">=</span>char_num<span class="token punctuation">;</span><span class="token comment">//初始化ans。</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">26</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//初始化并查集。</span>        <span class="token punctuation">&#123;</span>            father<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        string input<span class="token punctuation">;</span>        <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//一定要加一行这个，否则下面会输入一个换行符并结束输入。</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入。</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">//输入结束信号。</span>            <span class="token punctuation">&#123;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">int</span> x<span class="token operator">=</span>input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">=</span>input<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">find_father</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token function">find_father</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                ans<span class="token operator">--</span><span class="token punctuation">;</span><span class="token comment">//答案减1。</span>                father<span class="token punctuation">[</span><span class="token function">find_father</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">find_father</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//合并。</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//输出。</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/52016320">https://www.luogu.com.cn/record/52016320</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA10363题解</title>
      <link href="/2021-07-02-LuoguUVA10363TJ/"/>
      <url>/2021-07-02-LuoguUVA10363TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><p><a href="https://www.luogu.com.cn/paste/08kceuzt">在这里！</a></p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>依据题意，得出几条限制条件：</p><ul><li><p>因为执 <code>X</code> 棋子的玩家为先手，那么无论何时，要么 <code>X</code> 棋子和 <code>O</code> 棋子一样多，要么<code>X</code> 棋子比 <code>O</code> 棋子多一枚。</p></li><li><p>当 <code>X</code> 棋子和 <code>O</code> 棋子数量相同时，执 <code>X</code> 棋子的玩家应该尚未获胜；类似的，当 <code>X</code> 比 <code>O</code> 棋子多一枚时，执 <code>O</code> 棋子的玩家应该尚未获胜。</p></li></ul><p>只要不符合限制条件，则输出 <code>no</code>，否则输出 <code>yes</code>。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">char</span> graph<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//存储输入。</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> direction<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token comment">//直线第一个点的位置计算数组。</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">check_win</span><span class="token punctuation">(</span><span class="token keyword">char</span> win<span class="token punctuation">)</span><span class="token comment">//检查执win棋子的人是否获胜。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举直线中心点（第二个点）。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span>win<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> x1<span class="token operator">=</span>i<span class="token operator">+</span>direction<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>y1<span class="token operator">=</span>j<span class="token operator">+</span>direction<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//计算直线第一个点。</span><span class="token keyword">int</span> x2<span class="token operator">=</span>i<span class="token operator">-</span>direction<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>y2<span class="token operator">=</span>j<span class="token operator">-</span>direction<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//计算直线第二个点。</span><span class="token keyword">if</span><span class="token punctuation">(</span>x1<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">||</span>x1<span class="token operator">></span><span class="token number">3</span><span class="token operator">||</span>y1<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">||</span>y1<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment">//越界检测。</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x2<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">||</span>x2<span class="token operator">></span><span class="token number">3</span><span class="token operator">||</span>y2<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">||</span>y2<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token operator">==</span>win<span class="token operator">&amp;&amp;</span>graph<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token operator">==</span>win<span class="token punctuation">)</span><span class="token comment">//三点连一线，胜利。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> case_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>case_id<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>case_id<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> x_cnt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>o_cnt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//两种棋子的计数器。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> input<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>input<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'X'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>x_cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'O'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>o_cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>x_cnt<span class="token operator">==</span>o_cnt<span class="token operator">||</span>x_cnt<span class="token operator">==</span>o_cnt<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//不符合限制条件一。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"no\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x_cnt<span class="token operator">==</span>o_cnt<span class="token operator">&amp;&amp;</span><span class="token function">check_win</span><span class="token punctuation">(</span><span class="token string">'X'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//不符合限制条件二。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"no\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x_cnt<span class="token operator">==</span>o_cnt<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span><span class="token function">check_win</span><span class="token punctuation">(</span><span class="token string">'O'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//不符合限制条件二。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"no\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"yes\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51945748">https://www.luogu.com.cn/record/51945748</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00594题解</title>
      <link href="/2021-07-02-LuoguUVA00594TJ/"/>
      <url>/2021-07-02-LuoguUVA00594TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前置芝士：什么是小端序与大端序"><a href="#一、前置芝士：什么是小端序与大端序" class="headerlink" title="一、前置芝士：什么是小端序与大端序"></a>一、前置芝士：什么是小端序与大端序</h3><p>小端序，就是把一个整数的低位字节存储在内存的低位，而高位字节存储在内存的高位。如：</p><p>而大端序相反。</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>本题就是把小端序转换为大端序。</p><p>本题使用 $32$ 位有符号整数，占用 $4$ 字节，因此我们将第 $1$ 个字节与第 $4$ 个字节交换，将第 $2$ 个字节与第 $3$ 个字节交换。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> input<span class="token punctuation">,</span>output<span class="token punctuation">;</span><span class="token comment">//输入与输出。</span><span class="token keyword">char</span><span class="token operator">*</span> point<span class="token punctuation">;</span><span class="token comment">//字节指针。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>output<span class="token operator">=</span>input<span class="token punctuation">;</span>point<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">swap</span><span class="token punctuation">(</span>point<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>point<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//交换。</span><span class="token function">swap</span><span class="token punctuation">(</span>point<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>point<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d converts to %d\n"</span><span class="token punctuation">,</span>input<span class="token punctuation">,</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51932800">https://www.luogu.com.cn/record/51932800</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA11875题解</title>
      <link href="/2021-07-02-LuoguUVA11875TJ/"/>
      <url>/2021-07-02-LuoguUVA11875TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><p><a href="https://www.luogu.com.cn/discuss/show/322410">在这里！</a></p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>本题其实是求一个数列的中位数。</p><p>我们可以在读入数据之后进行排序，输出数列中间的数字即可。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> case_num<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>case_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> case_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>case_id<span class="token operator">&lt;=</span>case_num<span class="token punctuation">;</span>case_id<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> num<span class="token punctuation">;</span><span class="token keyword">int</span> input<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>num<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">sort</span><span class="token punctuation">(</span>input<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>input<span class="token operator">+</span><span class="token number">1</span><span class="token operator">+</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//排序。</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Case %d: %d\n"</span><span class="token punctuation">,</span>case_id<span class="token punctuation">,</span>input<span class="token punctuation">[</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51909379">https://www.luogu.com.cn/record/51909379</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷SP07586题解</title>
      <link href="/2021-07-02-LuoguSP07586TJ/"/>
      <url>/2021-07-02-LuoguSP07586TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>我们把回文字符串分成两种：长度为奇数的回文，和长度为偶数的回文。</p><p>对于长度为奇数的字符串，我们可以枚举输入字符串中的每一个字符，定义 <code>left</code> 和 <code>right</code> 为左右指针，初始值均为当前位置。</p><p>然后，循环进行比较。</p><ul><li><p>如果两个指针指向的字符相同：</p><p>计数器加 $1$，并将 <code>left</code> 往左移动，<code>right</code> 往右移动。</p></li><li><p>如果不相同或越界：</p><p>退出循环。</p></li></ul><p>对于长度为偶数的字符串，逻辑基本一致，只是 <code>right</code> 的初始值不能是当前位置，而是当前位置的右边一个字符。</p><p>由此，我们就可以得出完整代码。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">char</span> input<span class="token punctuation">[</span><span class="token number">1005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> len<span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//字符串长度。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//对于长度为奇数的回文字符串。</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> now_left<span class="token operator">=</span>i<span class="token punctuation">,</span>now_right<span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token comment">//两个关键指针。</span><span class="token keyword">while</span><span class="token punctuation">(</span>now_left<span class="token operator">>=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>now_right<span class="token operator">&lt;</span>len<span class="token punctuation">)</span><span class="token comment">//越界检测。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>now_left<span class="token punctuation">]</span><span class="token operator">==</span>input<span class="token punctuation">[</span>now_right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//左右指针一致。</span><span class="token punctuation">&#123;</span>ans<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>now_left<span class="token operator">--</span><span class="token punctuation">;</span><span class="token comment">//移动指针。</span>now_right<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//对于长度为偶数的回文字符串。</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> now_left<span class="token operator">=</span>i<span class="token punctuation">,</span>now_right<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>now_left<span class="token operator">>=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>now_right<span class="token operator">&lt;</span>len<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>now_left<span class="token punctuation">]</span><span class="token operator">==</span>input<span class="token punctuation">[</span>now_right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>ans<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>now_left<span class="token operator">--</span><span class="token punctuation">;</span>now_right<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51908392">https://www.luogu.com.cn/record/51908392</a>。</p><p>By <a href="https://www.luogu.com.cn/record/51908392">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷SP01163题解</title>
      <link href="/2021-07-02-LuoguSP01163TJ/"/>
      <url>/2021-07-02-LuoguSP01163TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译题意不明确的修正"><a href="#一、题目翻译题意不明确的修正" class="headerlink" title="一、题目翻译题意不明确的修正"></a>一、题目翻译题意不明确的修正</h3><p>本题题目翻译题意不明确，漏了一些要点。</p><ul><li><p><code>C++</code> 语言的变量命名习惯：每个单词全部小写，且单词之间用下划线 <code>_</code> 分隔。</p></li><li><p><code>Java</code> 语言的变量命名习惯：每个单词直接连接，中间没有任何字符分隔。每个单词的第一个字母使用大写，但第一个单词是个例外，全部小写。</p></li><li><p>你的任务就是，输入一个变量名（不会告诉你这是什么语言的），输出这个变量名的另一种语言的命名习惯。如果出现了错误，输出 <code>Error!</code></p></li></ul><h3 id="二、基本思路"><a href="#二、基本思路" class="headerlink" title="二、基本思路"></a>二、基本思路</h3><p>参考题意，我们可以得出几条要点：</p><ul><li><p>变量名不能以下划线开头或结尾。</p></li><li><p>变量名不能以大写字母结尾，但可以以大写字母结束。</p></li><li><p>变量名不能出现连续 $2$ 个或以上的下划线。</p></li><li><p>变量名不能同时出现大写字母与下划线。</p></li></ul><p>本题可以采用模拟法，一个个地扫描。</p><h3 id="三、具体思路"><a href="#三、具体思路" class="headerlink" title="三、具体思路"></a>三、具体思路</h3><ul><li><p>前期特判，如果变量名不符合第 $1-2$ 条要点，直接报 <code>Error!</code>。如果符合，则继续。</p></li><li><p>如果遇到了下划线：</p><ul><li><p>如果后一个字母是小写字母：</p><p>转换为大写字母，并继续遍历。</p></li><li><p>否则：</p><p>报 <code>Error!</code>。</p></li></ul></li><li><p>如果遇到了大写字母：</p><p>将其转换为下划线加小写字母的形式。</p></li><li><p>如果遇到了小写字母：</p><p>没啥好说的，直接加入答案字符串序列。</p></li><li><p>如果不符合第 $4$ 条要点（使用两个布尔型变量表示）：</p><p>报 <code>Error!</code>。</p></li></ul><p>由此我们得出了完整代码。</p><h3 id="四、完整代码"><a href="#四、完整代码" class="headerlink" title="四、完整代码"></a>四、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>string input<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span>cin<span class="token operator">>></span>input<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'_'</span><span class="token operator">||</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">>=</span><span class="token string">'A'</span><span class="token operator">&amp;&amp;</span>input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token string">'Z'</span><span class="token punctuation">)</span><span class="token operator">||</span>input<span class="token punctuation">[</span>input<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token comment">//前期特判。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"Error!"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">bool</span> java_flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>cpp_flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//两个flag。</span>string ans<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>input<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>java_flag<span class="token operator">&amp;&amp;</span>cpp_flag<span class="token punctuation">)</span><span class="token comment">//同时出现了两种模式。</span><span class="token punctuation">&#123;</span>ans<span class="token operator">=</span><span class="token string">"Error!"</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token comment">//下划线。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>=</span><span class="token string">'a'</span><span class="token operator">&amp;&amp;</span>input<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token string">'z'</span><span class="token punctuation">)</span><span class="token comment">//小写字母。</span><span class="token punctuation">&#123;</span>ans<span class="token operator">+=</span>input<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token operator">+</span><span class="token string">'A'</span><span class="token punctuation">;</span>cpp_flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token comment">//其它字符。</span><span class="token punctuation">&#123;</span>ans<span class="token operator">=</span><span class="token string">"Error!"</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>=</span><span class="token string">'A'</span><span class="token operator">&amp;&amp;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token string">'Z'</span><span class="token punctuation">)</span><span class="token comment">//大写字母。</span><span class="token punctuation">&#123;</span>ans<span class="token operator">+=</span><span class="token string">'_'</span><span class="token punctuation">;</span>ans<span class="token operator">+=</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token operator">+</span><span class="token string">'a'</span><span class="token punctuation">;</span>java_flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token comment">//小写字母。</span><span class="token punctuation">&#123;</span>ans<span class="token operator">+=</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五、后记"><a href="#五、后记" class="headerlink" title="五、后记"></a>五、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51893585">https://www.luogu.com.cn/record/51893585</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA01266题解</title>
      <link href="/2021-07-02-LuoguUVA01266TJ/"/>
      <url>/2021-07-02-LuoguUVA01266TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><p><a href="https://www.luogu.com.cn/paste/p7hg2klz">在这里！</a></p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>本题是一个数学题。</p><p>首先，设 $x$ 为当前的填写行数，$y$ 为当前的填写列数。</p><p>一开始，先把当前填写位置放在幻方的第一行的中间（$x=1$ 且 $y=(1+N)\div2$）（$N$ 的意思见题面）。</p><p>然后，填写一个 $1$。</p><p>接下来将填写的数逐次加 $1$ ，并将填写位置往右上角移动。如果越界了，就通过 $x+n$ 和 $y-n$ 调整填写位置，保证不越界。</p><p>但还有一个问题：如果填写位置已填写，怎么办？</p><p>此时，我们将填写位置调整为上一个填写位置的下方，再进行越界调整即可。</p><h3 id="三、如何降低求每一行或每一列或每一条对角线上的数之和的时间复杂度？"><a href="#三、如何降低求每一行或每一列或每一条对角线上的数之和的时间复杂度？" class="headerlink" title="三、如何降低求每一行或每一列或每一条对角线上的数之和的时间复杂度？"></a>三、如何降低求每一行或每一列或每一条对角线上的数之和的时间复杂度？</h3><p>一般情况下，求这个数据的时间复杂度是 $O(N)$，再看看 $3\le N\le15$ 的数据范围，也不是非要优化。</p><p>但是优化后的时间复杂度极低。</p><p>首先，整个幻方里的数排序后呈等差数列，首项为 $1$，末项为 $N^2$，项数为 $N^2$，所以我们可以使用等差数列求和公式进行求和，为 $(1+N^2)\times(N^2)\div2$。</p><p>幻方一共有 $N$ 行，所以每一行之和的平均值为 $(1+N^2)\times(N^2)\div2\div N$。</p><p>如此就可以降低求每一行或每一列或每一条对角线上的数之和的时间复杂度。</p><h3 id="四、完整代码"><a href="#四、完整代码" class="headerlink" title="四、完整代码"></a>四、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> graph<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//存储幻方。</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>sum<span class="token punctuation">;</span><span class="token keyword">int</span> case_id<span class="token punctuation">;</span><span class="token comment">//测试用例编号。</span><span class="token keyword">int</span> <span class="token function">get_len</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token comment">//获取一个数字的所占空间。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>case_id<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>case_id<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//如果测试样例编号大于1：</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//多输出一个空行。</span><span class="token punctuation">&#125;</span><span class="token function">memset</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//记得归零！</span><span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//初始填写位置。</span><span class="token keyword">int</span> standard_field_width<span class="token operator">=</span><span class="token function">get_len</span><span class="token punctuation">(</span>n<span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//标准场宽。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token operator">*</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>graph<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token comment">//填写数字。</span>x<span class="token operator">--</span><span class="token punctuation">;</span><span class="token comment">//行数减1。</span>y<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//列数加1。</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//越界调整。</span><span class="token punctuation">&#123;</span>x<span class="token operator">+=</span>n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">></span>n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>y<span class="token operator">-=</span>n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//如果此位置已被填写：</span><span class="token punctuation">&#123;</span>x<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//归位。</span>y<span class="token operator">--</span><span class="token punctuation">;</span>x<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">></span>n<span class="token punctuation">)</span><span class="token comment">//越界调整。</span><span class="token punctuation">&#123;</span>x<span class="token operator">-=</span>n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>y<span class="token operator">+=</span>n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"n=%d, sum=%d\n"</span><span class="token punctuation">,</span>n<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>n<span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>n<span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">/</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出第一行。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> prt_len<span class="token operator">=</span><span class="token function">get_len</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//数字实际占用空间。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>standard_field_width<span class="token operator">-</span>prt_len<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出空格。</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出数字。</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出换行。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五、后记"><a href="#五、后记" class="headerlink" title="五、后记"></a>五、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51870084">https://www.luogu.com.cn/record/51870084</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0679题解</title>
      <link href="/2021-07-02-LuoguCF0679ATJ/"/>
      <url>/2021-07-02-LuoguCF0679ATJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>可以证明，从下面的质数中选择 $2$ 次（每次选择的质数可以相同），然后相乘，就可以组成所有大于等于 $2$ 并小于等于 $100$ 的合数。</p><script type="math/tex; mode=display">2,3,5,7,11,13,17,19,23,29,31,37,41,43,47</script><p>因此，我们可以询问这些数是不是 $x$（意义如题目）的因数。如果其中有 $2$ 个或以上的数是 $x$ 的因数，$x$ 就是合数。否则就是质数。</p><p>但是，举几个反例：$4$、$9$、$25$、$49$。</p><p>这些数都是一个质数的平方。</p><p>因此，我们还需要考虑询问的数的平方是不是 $x$ 的因数。</p><p>由此，我们得出了完整代码。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> ask<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//存储需要询问的数。</span><span class="token keyword">int</span> cnt<span class="token punctuation">;</span><span class="token comment">//因数个数。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">15</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ask<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//询问。</span><span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> status<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>status<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token comment">//询问的数是x的因数。</span><span class="token punctuation">&#123;</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ask<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>ask<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token comment">//询问的数的平方有可能是x的因数。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ask<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>ask<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//再询问一次。</span><span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>status<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>cnt<span class="token operator">>=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">//因数个数大于2。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"composite\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"prime\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51843130">https://www.luogu.com.cn/record/51843130</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷P4432题解</title>
      <link href="/2021-07-02-LuoguP4432TJ/"/>
      <url>/2021-07-02-LuoguP4432TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题有一个地方需要注意：输出相同首字母中使用的次数<strong>最少</strong>的单词。</p><p>实际上这一点是有规律的，输出此首字母的第一个单词后，下次就输出下一个。于是，最后转了一圈，又回来了。</p><p>本题必须使用 <code>vector</code> 动态分配空间，否则会爆 <code>MLE</code>。</p><p><a href="https://imgtu.com/i/2q2zmF"><img src="https://z3.ax1x.com/2021/06/15/2q2zmF.png" alt="2q2zmF.png"></a></p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>vector<span class="token operator">&lt;</span>string<span class="token operator">></span>input<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//输入数据。</span><span class="token keyword">int</span> should_choose_id<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//应该选择哪一个字符串。</span><span class="token keyword">int</span> cnt<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//计数器。</span><span class="token keyword">int</span> k<span class="token punctuation">,</span>n<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>k<span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> temp<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入。</span>input<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cnt<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//计数器自增。</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">sort</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//排序。</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span>input<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>should_choose_id<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>should_choose_id<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>should_choose_id<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>cnt<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//应该选择下一个字符串。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51821857">https://www.luogu.com.cn/record/51821857</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0727C题解</title>
      <link href="/2021-07-02-LuoguCF0727CTJ/"/>
      <url>/2021-07-02-LuoguCF0727CTJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>一看数据范围，$3\le n\le5000$，心里就有底了。</p><p>首先，我们询问三次，并设三个数：</p><script type="math/tex; mode=display">\begin{cases}x_1=a[1]+a[2]\\x_2=a[1]+a[3]\\x_3=a[2]+a[3]\end{cases}</script><p>然后计算数组 $a$ 的前三个数：</p><script type="math/tex; mode=display">\begin{cases}a[1]=(x_1+x_2+x_3)\div2-x3\\a[2]=(x_1+x_2+x_3)\div2-x2\\a[3]=(x_1+x_2+x_3)\div2-x1\end{cases}</script><p>接下来，我们可以根据以下公式，循环求后面的数：</p><script type="math/tex; mode=display">a[i]=(a[i-1]+a[i])-a[i-1]</script><p>最后输出即可。</p><p>由此我们得出完整代码。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>x1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>x3<span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">5005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入n。</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"? 1 2\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//询问前三个数。</span><span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//记得清空缓冲区！</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>x1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"? 1 3\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>x2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"? 2 3\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>x3<span class="token punctuation">)</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>x1<span class="token operator">+</span>x2<span class="token operator">+</span>x3<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">-</span>x3<span class="token punctuation">;</span><span class="token comment">//计算前三个数。</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>x1<span class="token operator">+</span>x2<span class="token operator">+</span>x3<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">-</span>x2<span class="token punctuation">;</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>x1<span class="token operator">+</span>x2<span class="token operator">+</span>x3<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">-</span>x1<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"? %d %d\n"</span><span class="token punctuation">,</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//循环求后面的数。</span><span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> input<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>input<span class="token operator">-</span>a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//计算后面的数。</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"! "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51821057">https://www.luogu.com.cn/record/51821057</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00184题解</title>
      <link href="/2021-07-01-LuoguUVA00184TJ/"/>
      <url>/2021-07-01-LuoguUVA00184TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、翻译勘误"><a href="#一、翻译勘误" class="headerlink" title="一、翻译勘误"></a>一、翻译勘误</h3><p>题目翻译中写到：每个测试用例最多有 $100$ 个节点。</p><p>但是有一个测试用例是例外。这个测试用例亲测应该少于 $1000$ 个节点（<a href="https://www.luogu.com.cn/user/387840">dengziyue</a> 的说法：少于 $300$ 个）。</p><p>作为本题的翻译者，在此向大家谢罪。</p><h3 id="二、前置芝士：如何判断三个点处于同一条直线"><a href="#二、前置芝士：如何判断三个点处于同一条直线" class="headerlink" title="二、前置芝士：如何判断三个点处于同一条直线"></a>二、前置芝士：如何判断三个点处于同一条直线</h3><p>设三个点：$A(x_1,y_1)$，$B(x_2,y_2)$，$C(x_3,y_3)$，并且这三个点不位于同一位置。</p><p>当 $(y_2-y_1)\div(x_2-x_1)=(y_3-y_2)\div(x_3-x_2)$ 时，点 $A$、点 $B$、点 $C$ 位于同一条直线上。</p><p>但是有一个前提：$x_1\ne x_2$ 且 $x_2\ne x_3$。</p><p>因此我们增加特判：</p><ol><li><p>如果 $x_1=x_2$，则：如果 $x_2=x_3$，则三点处于同一条直线，否则就不处于同一条直线。</p></li><li><p>如果 $x_2=x_3$，则：如果 $x_1=x_2$，则三点处于同一条直线，否则就不处于同一条直线。</p></li></ol><p>对于纵坐标，逻辑也相同。</p><p>因此我们得出了判断三个点是否处于同一条直线的代码：</p><pre class="line-numbers language-none"><code class="language-none">bool check_point_in_line(int x1,int y1,int x2,int y2,int x3,int y3)&#123;if(x1&#x3D;&#x3D;x2)&#123;return x2&#x3D;&#x3D;x3;&#125;if(x2&#x3D;&#x3D;x3)&#123;return x1&#x3D;&#x3D;x2;&#125;if(y1&#x3D;&#x3D;y2)&#123;return y2&#x3D;&#x3D;y3;&#125;if(y2&#x3D;&#x3D;y3)&#123;return y1&#x3D;&#x3D;y2;&#125;return (double)(y2-y1)&#x2F;(x2-x1)&#x3D;&#x3D;(double)(y3-y2)&#x2F;(x3-x2);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、具体思路"><a href="#三、具体思路" class="headerlink" title="三、具体思路"></a>三、具体思路</h3><p>首先读入数据，并且按照题目要求进行排序。</p><p>然后，枚举两个节点 $a$ 和 $b$，作为直线的其中两个点。</p><p>接着，枚举几个节点，如果枚举到的节点与 $a$ 和 $b$ 处于同一条直线上，那么加入这条直线的节点集。</p><p>最后，如果检测到这条直线的节点集只有 $a$ 和 $b$，则排除这条直线。</p><p>使用一个三级循环即可解决问题。</p><p>但是，我们需要一个关键步骤：去重。</p><p>假设这是某一个测试用例的输入：</p><pre class="line-numbers language-none"><code class="language-none">1 1 2 2 3 3 4 4 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显然，只有一条直线，所以这是正确输出：</p><pre class="line-numbers language-none"><code class="language-none">The following lines were found:(   1,   1)(   2,   2)(   3,   3)(   4,   4)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但实际情况是，输出是这样的：</p><pre class="line-numbers language-none"><code class="language-none">The following lines were found:(   1,   1)(   2,   2)(   3,   3)(   4,   4)(   1,   1)(   3,   3)(   4,   4)(   2,   2)(   3,   3)(   4,   4)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，多出来了两条直线，因为输出的第一条直线就包含了第二条直线和第三条直线。</p><p>那么如何去重？</p><h3 id="四、关键步骤：去重"><a href="#四、关键步骤：去重" class="headerlink" title="四、关键步骤：去重"></a>四、关键步骤：去重</h3><p>首先，将输入的节点排序后，每个节点都赋予一个唯一编号：在输入存储数组的下标。</p><p>然后，上述错误输出对应的唯一编号就是：</p><pre class="line-numbers language-none"><code class="language-none">1 2 3 41 3 42 3 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们可以发现，第二条直线有的编号，第一条直线都有。同理，第三条直线有的编号，第一条直线都有。</p><p>此时，我们说这三条直线“互相重合”。</p><p>由于循环顺序的特殊性，如果几条直线互相重合，第一条直线包含的节点数量一定大于之后的直线的节点数量。所以对于互相重合的直线，我们只需保留第一个即可，不必纠结那条直线才是正确答案。</p><p>而 $n\le300$，可以使用桶的思想去做。</p><p>因此我们得出了去重代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> line_id<span class="token punctuation">)</span><span class="token comment">//line_id代表：第line_id条直线是否可以与其它直线共同存在（不重合）？重合返回false，不重合返回true。</span><span class="token punctuation">&#123;</span><span class="token keyword">bool</span> check_appear<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//第line_id条直线包含的编号。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>MAXN<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>check_appear<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>main_point_cnt<span class="token punctuation">[</span>line_id<span class="token punctuation">]</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n_index<span class="token operator">=</span>line<span class="token punctuation">[</span>line_id<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>check_appear<span class="token punctuation">[</span>n_index<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>line_id<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">bool</span> flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//如果出现了其它直线不包含但第line_id条直线包含的点，那么肯定不重合。</span><span class="token keyword">bool</span> appear<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//其它直线包含的编号。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>MAXN<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>appear<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>main_point_cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n_index<span class="token operator">=</span>line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>appear<span class="token punctuation">[</span>n_index<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>MAXN<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>appear<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>check_appear<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//出现了重合。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//未出现重合。</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五、完整代码"><a href="#五、完整代码" class="headerlink" title="五、完整代码"></a>五、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXN</span> <span class="token expression"><span class="token number">1005</span></span></span><span class="token keyword">struct</span> <span class="token class-name">point</span><span class="token comment">//节点结构体。sort不支持以数组为单位进行排序。</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>input<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> line<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//存储答案直线。</span><span class="token keyword">int</span> main_point_cnt<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//存储一条直线有多少个节点。</span><span class="token keyword">bool</span> <span class="token function">point_cmp</span><span class="token punctuation">(</span>point a<span class="token punctuation">,</span>point b<span class="token punctuation">)</span><span class="token comment">//sort的比较函数。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>x<span class="token operator">==</span>b<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> a<span class="token punctuation">.</span>y<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> a<span class="token punctuation">.</span>x<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> line_id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//查询是否有重复</span><span class="token keyword">bool</span> check_appear<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>MAXN<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>check_appear<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>main_point_cnt<span class="token punctuation">[</span>line_id<span class="token punctuation">]</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n_index<span class="token operator">=</span>line<span class="token punctuation">[</span>line_id<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>check_appear<span class="token punctuation">[</span>n_index<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>line_id<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">bool</span> flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">bool</span> appear<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>MAXN<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>appear<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>main_point_cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n_index<span class="token operator">=</span>line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>appear<span class="token punctuation">[</span>n_index<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>MAXN<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>appear<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>check_appear<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">bool</span> <span class="token function">check_point_in_line</span><span class="token punctuation">(</span><span class="token keyword">int</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> y1<span class="token punctuation">,</span><span class="token keyword">int</span> x2<span class="token punctuation">,</span><span class="token keyword">int</span> y2<span class="token punctuation">,</span><span class="token keyword">int</span> x3<span class="token punctuation">,</span><span class="token keyword">int</span> y3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//查询三个点是否在同一条直线上。</span><span class="token keyword">if</span><span class="token punctuation">(</span>x1<span class="token operator">==</span>x2<span class="token punctuation">)</span><span class="token comment">//特判。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> x2<span class="token operator">==</span>x3<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x2<span class="token operator">==</span>x3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> x1<span class="token operator">==</span>x2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>y1<span class="token operator">==</span>y2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> y2<span class="token operator">==</span>y3<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>y2<span class="token operator">==</span>y3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> y1<span class="token operator">==</span>y2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>x2<span class="token operator">-</span>x1<span class="token punctuation">)</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y3<span class="token operator">-</span>y2<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>x3<span class="token operator">-</span>x2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回计算结果。虽然double会有误差，但基本可以忽略。</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//输入阶段</span><span class="token keyword">int</span> point_cnt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//输入了多少个点。</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>point_cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">[</span>point_cnt<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">[</span>point_cnt<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>point_cnt<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>input<span class="token punctuation">[</span>point_cnt<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//如果输入为两个0：</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>point_cnt<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//如果还没有产生任何有效输入：</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//直接退出程序，完结撒花！</span><span class="token punctuation">&#125;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//退出输入循环。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>point_cnt<span class="token operator">--</span><span class="token punctuation">;</span><span class="token function">sort</span><span class="token punctuation">(</span>input<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>input<span class="token operator">+</span>point_cnt<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>point_cmp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//排序。</span><span class="token comment">//计算阶段</span><span class="token keyword">int</span> line_cnt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//直线数量。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>point_cnt<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>point_cnt<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举两个点，即前面提到过的a和b。</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> line_point_cnt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//直线点数。</span>line_cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>point_cnt<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举第三个点。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check_point_in_line</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span>input<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span>input<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span>input<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span>input<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//三个点在一条直线上：</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>line_point_cnt<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//如果这是找到的第一个符合要求的“第三个点”，则将前两个点加入节点集合。</span><span class="token punctuation">&#123;</span>line<span class="token punctuation">[</span>line_cnt<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>line<span class="token punctuation">[</span>line_cnt<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>j<span class="token punctuation">;</span>line_point_cnt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>line_point_cnt<span class="token operator">++</span><span class="token punctuation">;</span>line<span class="token punctuation">[</span>line_cnt<span class="token punctuation">]</span><span class="token punctuation">[</span>line_point_cnt<span class="token punctuation">]</span><span class="token operator">=</span>k<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>main_point_cnt<span class="token punctuation">[</span>line_cnt<span class="token punctuation">]</span><span class="token operator">=</span>line_point_cnt<span class="token punctuation">;</span><span class="token comment">//存储一条直线上有多少节点。</span><span class="token keyword">if</span><span class="token punctuation">(</span>line_point_cnt<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//没有节点，无效。</span><span class="token punctuation">&#123;</span>line_cnt<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">check</span><span class="token punctuation">(</span>line_cnt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//重合，无效。</span><span class="token punctuation">&#123;</span>line_cnt<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//输出阶段</span><span class="token keyword">if</span><span class="token punctuation">(</span>line_cnt<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//当没有直线时：</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"No lines were found\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出无直线信息。</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token comment">//继续下一轮测试样例。</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The following lines were found:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先输出开头。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>line_cnt<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>main_point_cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> x<span class="token operator">=</span>input<span class="token punctuation">[</span>line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span>y<span class="token operator">=</span>input<span class="token punctuation">[</span>line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"(%4d,%4d)"</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出每个节宽点。注意输出场宽。</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//换行。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//虽然程序结构决定了程序不可能执行到这里，但还是加一句。</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="六、后记"><a href="#六、后记" class="headerlink" title="六、后记"></a>六、后记</h3><p>这是我到目前为止写过的最长的一篇题解，因为这道题实在太难。</p><p>记录：<a href="https://www.luogu.com.cn/record/51815697">https://www.luogu.com.cn/record/51815697</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
            <tag> 暴力与模拟 </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA01062题解</title>
      <link href="/2021-07-01-LuoguUVA01062TJ/"/>
      <url>/2021-07-01-LuoguUVA01062TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><h4 id="1、题目描述翻译"><a href="#1、题目描述翻译" class="headerlink" title="1、题目描述翻译"></a>1、题目描述翻译</h4><p>一个集装箱码头，它接收从国内公路或铁路到达的集装箱，并将其装载至海船上。</p><p>这个集装箱码头可以看做几个栈的组合，当集装箱到达码头时，集装箱就会被放在某一个栈的栈顶。当海船到达时，海船就会从某一个栈的<strong>栈顶</strong>上装载集装箱。</p><p>如果一个不在栈顶的集装箱想要被装载，那么就必须移除上面的集装箱，而这会耽误装货时间。</p><p>解决这个问题的好办法就是：建造更多的栈，但这会占用地面空间。</p><p>你的任务就是给出一个方案，使得每艘海船到达时都可以<strong>直接</strong>从栈顶装载集装箱（也就是说，这艘船打算装载的集装箱必须在当前的栈顶，或者某个打算被装载的集装箱之上都是打算被装载到同一艘海船上的集装箱），且栈的数量尽可能少。</p><p>对于这个问题，我们知道：</p><ol><li><p>海船用一个大写字母编号，且严格按照字典序到达码头。</p></li><li><p>每个集装箱都标有一个大写字母，代表这个集装箱应该被装载到那一艘海船上。</p></li><li><p>栈可以无限高。</p></li></ol><h4 id="2、输入格式翻译"><a href="#2、输入格式翻译" class="headerlink" title="2、输入格式翻译"></a>2、输入格式翻译</h4><p>输入包含很多行，每一行代表一个测试用例。以 <code>end</code> 结束。</p><p>每一行有很多大写字母（不超过 $1000$ 个），代表集装箱的到达顺序。待集装箱<strong>全部</strong>到达以后，海船才会按顺序到达。</p><h4 id="3、输出格式翻译"><a href="#3、输出格式翻译" class="headerlink" title="3、输出格式翻译"></a>3、输出格式翻译</h4><p>对于每一个测试用例，输出测试用例编号（从 $1$ 开始）和装载开始前所需要的栈的数量。</p><h4 id="4、输入样例"><a href="#4、输入样例" class="headerlink" title="4、输入样例"></a>4、输入样例</h4><pre class="line-numbers language-none"><code class="language-none">ACBACBACBACBACBACCCCBBBBAAAAACMICPCend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5、输出样例"><a href="#5、输出样例" class="headerlink" title="5、输出样例"></a>5、输出样例</h4><pre class="line-numbers language-none"><code class="language-none">Case 1: 1Case 2: 3Case 3: 1Case 4: 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>模拟。</p><p>首先我们知道，每一个栈从上到下一定是从小到大。如果不是这样，那么下面的集装箱怎么在上面的集装箱被装载之前被装载？</p><p>我们可以定义 $stack$ 数组代表某一个栈的栈顶。显然，栈的数量最多为 $26$，即最坏情况下，每一种集装箱占用一个栈。</p><p>如果输入的某个字符比某一个栈的栈顶还小，就说“装得下”，否则就是“装不下”。</p><p>然后，遍历输入。如果最后一个栈装不下，那么新建一个栈，这就装得下了。</p><p>显然，每一个栈的栈顶都呈单调递增。因此，如果最后一个栈装不下，则前面的栈都一定装不下。</p><p>如果最后一个栈装得下，那么就从前往后遍历所有栈，看看哪个排得更靠前的栈装得下，并装载。</p><p>最后输出新建栈数加 $1$ 即可。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">char</span> input<span class="token punctuation">[</span><span class="token number">1005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//输入。</span><span class="token keyword">int</span> case_id<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'e'</span><span class="token punctuation">)</span><span class="token comment">//退出条件。</span><span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>case_id<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//新建栈数。</span><span class="token keyword">char</span> stack<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//栈顶。</span>stack<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//第一个字符肯定装得下。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>stack<span class="token punctuation">[</span>ans<span class="token punctuation">]</span><span class="token operator">&lt;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//最后一个栈装不下了：</span><span class="token punctuation">&#123;</span>ans<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//新建栈。</span>stack<span class="token punctuation">[</span>ans<span class="token punctuation">]</span><span class="token operator">=</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//装栈。</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>ans<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>stack<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">>=</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//装得下：</span><span class="token punctuation">&#123;</span>stack<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//装栈。</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Case %d: %d\n"</span><span class="token punctuation">,</span>case_id<span class="token punctuation">,</span>ans<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51751745">https://www.luogu.com.cn/record/51751745</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA12896题解</title>
      <link href="/2021-07-01-LuoguUVA12896TJ/"/>
      <url>/2021-07-01-LuoguUVA12896TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题可以定义一个字符数组 <code>dictionary</code>，预先存好编号对应的字符，然后在查询时直接调用输出。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">char</span> dictionary<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token comment">//定义字符数组。</span><span class="token punctuation">&#123;</span><span class="token string">"0 "</span><span class="token punctuation">,</span><span class="token comment">//其实前面的数字仅为占位。</span><span class="token string">"1.,?\""</span><span class="token punctuation">,</span><span class="token string">"2abc"</span><span class="token punctuation">,</span><span class="token string">"3def"</span><span class="token punctuation">,</span><span class="token string">"4ghi"</span><span class="token punctuation">,</span><span class="token string">"5jkl"</span><span class="token punctuation">,</span><span class="token string">"6mno"</span><span class="token punctuation">,</span><span class="token string">"7pqrs"</span><span class="token punctuation">,</span><span class="token string">"8tuv"</span><span class="token punctuation">,</span><span class="token string">"9wxyz"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> t<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> case_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>case_id<span class="token operator">&lt;=</span>t<span class="token punctuation">;</span>case_id<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> l<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入长度。</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//存储输入的按键编号。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>l<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>l<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>l<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span>dictionary<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//直接调用输出。</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51712465">https://www.luogu.com.cn/record/51712465</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA11734题解</title>
      <link href="/2021-07-01-LuoguUVA11734TJ/"/>
      <url>/2021-07-01-LuoguUVA11734TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>输入两个字符串。分三种情况：</p><ol><li><p>完全匹配</p><p>此时输出 <code>Yes</code>。</p></li><li><p>不完全匹配，但去掉空格后匹配</p><p>此时输出 <code>Output Format Error</code>。</p></li><li><p>不符合上述情况的情况</p><p>此时输出 <code>Wrong Answer</code>。</p></li></ol><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>string a<span class="token punctuation">,</span>b<span class="token punctuation">;</span><span class="token keyword">int</span> t<span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span>string a<span class="token punctuation">,</span>string b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> a_len<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>b_len<span class="token operator">=</span>b<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> point_move<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//偏移量。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>b_len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">+</span>point_move<span class="token operator">>=</span>a_len<span class="token punctuation">)</span><span class="token comment">//越界。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span>point_move<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token comment">//遇到空格。</span><span class="token punctuation">&#123;</span>point_move<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span>point_move<span class="token punctuation">]</span><span class="token operator">!=</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//字符不匹配。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cin<span class="token operator">>></span>t<span class="token punctuation">;</span><span class="token comment">//输入数据组数。</span><span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不加这个，额外的换行符就会被输入。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> case_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>case_id<span class="token operator">&lt;=</span>t<span class="token punctuation">;</span>case_id<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入。</span><span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"Case "</span><span class="token operator">&lt;&lt;</span>case_id<span class="token operator">&lt;&lt;</span><span class="token string">": "</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">==</span>b<span class="token punctuation">)</span><span class="token comment">//完全匹配。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"Yes"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//去空格后匹配。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"Output Format Error"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"Wrong Answer"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//输出换行。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51712138">https://www.luogu.com.cn/record/51712138</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA01753题解</title>
      <link href="/2021-07-01-LuoguUVA01753TJ/"/>
      <url>/2021-07-01-LuoguUVA01753TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题可以选用二分。</p><p>一遍遍地猜 $c$ 的值，如果计算后所用时间更少或相等，则更新答案，并减少 $c$。反之则增加 $c$。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>t<span class="token punctuation">;</span><span class="token keyword">int</span> input_d<span class="token punctuation">[</span><span class="token number">1001</span><span class="token punctuation">]</span><span class="token punctuation">,</span>input_s<span class="token punctuation">[</span><span class="token number">1001</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">double</span> ans<span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">double</span> c<span class="token punctuation">)</span><span class="token comment">//检查数据是否通过。</span><span class="token punctuation">&#123;</span><span class="token keyword">double</span> now_t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//当前所用的时间。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input_s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>c<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//速度不为正数，怎么可能。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>now_t<span class="token operator">+=</span>input_d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/</span><span class="token punctuation">(</span>input_s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> now_t<span class="token operator">&lt;=</span>t<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>t<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input_d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input_s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">double</span> left<span class="token operator">=</span><span class="token operator">-</span><span class="token number">9999999</span><span class="token punctuation">,</span>right<span class="token operator">=</span><span class="token number">9999999</span><span class="token punctuation">;</span><span class="token comment">//将left设得很小，right设得很大。</span><span class="token keyword">while</span><span class="token punctuation">(</span>right<span class="token operator">-</span>left<span class="token operator">></span><span class="token number">0.00000001</span><span class="token comment">/*这是10的7次方。*/</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">double</span> middle<span class="token operator">=</span><span class="token punctuation">(</span>left<span class="token operator">+</span>right<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>middle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>ans<span class="token operator">=</span>right<span class="token operator">=</span>middle<span class="token punctuation">;</span><span class="token comment">//更新答案，并降低速度。</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>left<span class="token operator">=</span>middle<span class="token punctuation">;</span><span class="token comment">//升高速度。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%0.9f\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span>输出。<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51698548">https://www.luogu.com.cn/record/51698548</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA01757题解</title>
      <link href="/2021-07-01-LuoguUVA01757TJ/"/>
      <url>/2021-07-01-LuoguUVA01757TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>我们可以使用弗洛伊德算法进行魔改。</p><p>我们给每个字母都标上编号，$0$ 代表 a，$1$ 代表 b，以此类推。</p><p>定义 $floyd_array[i][j]$ 代表编号为 $i$ 的字母是否可以转换成编号为 $j$ 的字母，然后再一个个地对比两个字符串的字母。</p><p>注意，如果两个字符串长度都不同，直接输出 <code>no</code>。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">bool</span> floyd_array<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//弗洛伊德算法的数组。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> m<span class="token punctuation">,</span>n<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token comment">//不断输入。</span><span class="token punctuation">&#123;</span><span class="token function">memset</span><span class="token punctuation">(</span>floyd_array<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>floyd_array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//数组全部置为false。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//但是对角线要置为true。思考：为什么？</span><span class="token punctuation">&#123;</span>floyd_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//输入字典。</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> from<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>to<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>from<span class="token punctuation">,</span><span class="token operator">&amp;</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>floyd_array<span class="token punctuation">[</span>from<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>to<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//可连接。</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//弗洛伊德算法的标准格式。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>floyd_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>floyd_array<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>floyd_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> from<span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">,</span>to<span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>from<span class="token punctuation">,</span><span class="token operator">&amp;</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token function">strlen</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//长度都不一样。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"no\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">bool</span> flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>floyd_array<span class="token punctuation">[</span>from<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>to<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"yes\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"no\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、思考题答案"><a href="#三、思考题答案" class="headerlink" title="三、思考题答案"></a>三、思考题答案</h3><p>当 $floyd_array[i][j]$ 中 $i=j$ 时，代表从一个字母能否转换为同一个字母。那当然可以，根本不需要转换。</p><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51694422">https://www.luogu.com.cn/record/51694422</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> Floyd算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00445题解</title>
      <link href="/2021-07-01-LuoguUVA00445TJ/"/>
      <url>/2021-07-01-LuoguUVA00445TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><h4 id="一、题目描述翻译"><a href="#一、题目描述翻译" class="headerlink" title="一、题目描述翻译"></a>一、题目描述翻译</h4><p>你的任务就是创造一个迷宫绘画程序。这个迷宫可以包含大写字母 A-Z、*（星号）和空格。</p><h4 id="二、输入格式翻译"><a href="#二、输入格式翻译" class="headerlink" title="二、输入格式翻译"></a>二、输入格式翻译</h4><p>你的程序将从输入中获取迷宫的信息。输入有很多行，每一行包含一系列数字和字符，数字在字符前面。形如 <code>&lt;number&gt;&lt;char&gt;&lt;number&gt;&lt;char&gt;</code>，其中 <code>&lt;number&gt;</code> 代表数字，<code>&lt;char&gt;</code> 代表字符。它的意义是：将 <code>&lt;char&gt;</code> 重复 <code>&lt;number&gt;</code> 次，如 <code>2T</code> 的结果字符串为 <code>TT</code>。需要注意，可能有两个甚至更多 <code>&lt;number&gt;</code>，此时将各个 <code>number</code> 相加。如 <code>11T</code> 相当于 <code>2T</code>。</p><p><code>&lt;char&gt;</code>有多种可能。如果是一个大写字母或星号，原样输出。如果是 <code>b</code>，则输出空格。如 <code>1A1K1b2*1I1O1I2*</code> 代表 <code>AK **IOI**</code>。</p><p>如果输入时遇到一个 <code>!</code>（感叹号），请输出一个换行。此符号前面没有数字。</p><p>完成一行输入后，都应输出一个换行。如：</p><pre class="line-numbers language-none"><code class="language-none">1A1B1C1D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>对应：</p><pre class="line-numbers language-none"><code class="language-none">ABCD<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>而不是：<code>ABCD</code>（尽管输入中没有感叹号）。</p><p>不同迷宫的描述将用空行分隔。此时您应该输出一个空行（即两个换行）。（洛谷题面中的输出样例没有空行，但原题 PDF 中有。）输入文件将由文件结尾终止。</p><h4 id="三、输出格式翻译"><a href="#三、输出格式翻译" class="headerlink" title="三、输出格式翻译"></a>三、输出格式翻译</h4><p>对于输入文件中的每个描述，绘制相应的迷宫。迷宫中的行数或文件中的迷宫数没有限制，但任何一行包含的字符都不会超过 $132$ 个。</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>本题考察字符串，可以模拟。</p><p>首先，读入整一行（即使这是空行），然后顺序处理数据。</p><ol><li><p>如果检测到一个数字，则将计数器增加这个数。</p></li><li><p>如果遇到一个非感叹号字符，则重复输出此字符，<strong>并清空计数器</strong>。</p></li><li><p>如果遇到一个感叹号，输出换行。</p></li></ol><p>最后再输出一个换行。</p><p>注意，题目很奇怪，输出字符的数字是前面数字的<strong>和</strong>,而不是那个数字。</p><p>如：<code>11T</code>。</p><p>错误示范：<code>TTTTTTTTTTT</code>（$11$ 个）。</p><p>正确示范：<code>TT</code>（$2$ 个）。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>string input<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//输入。</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> repeat_time<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//重复次数计数器。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>input<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">&amp;&amp;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token comment">//检测到数字。</span><span class="token punctuation">&#123;</span>repeat_time<span class="token operator">+=</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'0'</span><span class="token punctuation">;</span><span class="token comment">//增加计数器。</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token comment">//检测到字符。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'!'</span><span class="token punctuation">)</span><span class="token comment">//感叹号。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//换行。</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>repeat_time<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//重复输出。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token comment">//空格。</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>cout<span class="token operator">&lt;&lt;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>repeat_time<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//清空计数器。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//换行。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51691258">https://www.luogu.com.cn/record/51691258</a>。</p><p>By <a href="https://www.luogu.com.cn/problem/UVA445">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0134A题解</title>
      <link href="/2021-07-01-LuoguCF0134ATJ/"/>
      <url>/2021-07-01-LuoguCF0134ATJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>根据统计的相关知识，在一个数列里剔除一个数，如果剩下的数的平均值与这个被剔除的数相等，则就算不剔除这个数，数列的平均值也相等。</p><p>因此，我们只需求一次平均值，再进行判断。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>input<span class="token punctuation">[</span><span class="token number">200001</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum<span class="token punctuation">,</span>average<span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sum<span class="token operator">+=</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//计算总和。</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>sum<span class="token operator">%</span>n<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//平均值为小数，不可能有答案。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"0\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>average<span class="token operator">=</span>sum<span class="token operator">/</span>n<span class="token punctuation">;</span><span class="token comment">//计算平均值。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//计算符合要求的数的数量。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>average<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>ans<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出数量。</span><span class="token keyword">if</span><span class="token punctuation">(</span>ans<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//特判ans为0的情况。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//输出第二行的结果。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>average<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//换行。</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51670493">https://www.luogu.com.cn/record/51670493</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00446题解</title>
      <link href="/2021-07-01-LuoguUVA00446TJ/"/>
      <url>/2021-07-01-LuoguUVA00446TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题考察进制转换。</p><p>对于每一组数据，我们可以先读入十六进制第一运算数、运算符、十六进制第二运算数。</p><p>然后，我们将十六进制第一运算数和十六进制第二运算数转换为十进制第一运算数和十进制第二运算数，并得出十进制运算结果。</p><p>最后，我们将十进制第一运算数和十进制第二运算数转换为二进制第一运算数和十二进制第二运算数。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">char</span> hex_a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>oper<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>hex_b<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//三大输入数据。</span><span class="token keyword">char</span> bin_a<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">,</span>bin_b<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//二进制字符串。</span><span class="token keyword">void</span> <span class="token function">turn10into2</span><span class="token punctuation">(</span><span class="token keyword">int</span> num10<span class="token punctuation">,</span><span class="token keyword">char</span> bin<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//从十转二。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">12</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//思考题Q1：为什么要有这个循环？</span><span class="token punctuation">&#123;</span>bin<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'0'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> now_position<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>num10<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>bin<span class="token punctuation">[</span>now_position<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>num10<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'0'</span><span class="token punctuation">;</span>num10<span class="token operator">/=</span><span class="token number">2</span><span class="token punctuation">;</span>now_position<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>bin<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'\0'</span><span class="token punctuation">;</span><span class="token comment">//思考题Q2：这又是干什么的？</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">turn16into10</span><span class="token punctuation">(</span><span class="token keyword">char</span> hex<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//从十六转十。</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> quanzhi<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//当前数位的权值。</span><span class="token keyword">int</span> result<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span>hex<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>hex<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">&amp;&amp;</span>hex<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token comment">//如果检测到阿拉伯数字：</span><span class="token punctuation">&#123;</span>result<span class="token operator">+=</span>quanzhi<span class="token operator">*</span><span class="token punctuation">(</span>hex<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token comment">//字母：</span><span class="token punctuation">&#123;</span>result<span class="token operator">+=</span>quanzhi<span class="token operator">*</span><span class="token punctuation">(</span>hex<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>quanzhi<span class="token operator">*=</span><span class="token number">16</span><span class="token punctuation">;</span><span class="token comment">//每进一位，权值就乘以16。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s%s%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>hex_a<span class="token punctuation">,</span><span class="token operator">&amp;</span>oper<span class="token punctuation">,</span><span class="token operator">&amp;</span>hex_b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入。</span><span class="token keyword">int</span> oper_a<span class="token operator">=</span><span class="token function">turn16into10</span><span class="token punctuation">(</span>hex_a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//转换为十进制。</span><span class="token keyword">int</span> oper_b<span class="token operator">=</span><span class="token function">turn16into10</span><span class="token punctuation">(</span>hex_b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> result<span class="token operator">=</span><span class="token punctuation">(</span>oper<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'+'</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>oper_a<span class="token operator">+</span>oper_b<span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span>oper_a<span class="token operator">-</span>oper_b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//计算。</span><span class="token function">turn10into2</span><span class="token punctuation">(</span>oper_a<span class="token punctuation">,</span>bin_a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//转换为二进制。</span><span class="token function">turn10into2</span><span class="token punctuation">(</span>oper_b<span class="token punctuation">,</span>bin_b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s %s %s = %d\n"</span><span class="token punctuation">,</span>bin_a<span class="token punctuation">,</span>oper<span class="token punctuation">,</span>bin_b<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、思考题答案"><a href="#三、思考题答案" class="headerlink" title="三、思考题答案"></a>三、思考题答案</h3><p>Q1：在初始状态下，字符数组中的所有值都为 <code>\0</code>。此时，如果直接输出，则输出时遇到此字符就会停止。然而我们不希望它停止，所以我们要初始化为 $0$。</p><p>Q2：设置停止标志。</p><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51646478">https://www.luogu.com.cn/record/51646478</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
            <tag> 进制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0977B题解</title>
      <link href="/2021-07-01-LuoguCF0977BTJ/"/>
      <url>/2021-07-01-LuoguCF0977BTJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>我们一看数据范围：$2\le n\le100$，这不就是明摆着的暴力算法吗！<br>我们可以枚举每一种可能，找出出现次数最多的子串。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> len<span class="token punctuation">;</span><span class="token comment">//字符串长度。</span>string input<span class="token punctuation">;</span><span class="token comment">//输入。</span><span class="token keyword">int</span> ans_cnt<span class="token punctuation">;</span><span class="token comment">//出现次数最多的子串出现的次数。</span><span class="token keyword">int</span> ans_i<span class="token punctuation">;</span><span class="token comment">//出现次数最多的子串的位置。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cin<span class="token operator">>></span>len<span class="token operator">>></span>input<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> cnt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//思考题。Q1：初始化为1有何意义？Q2：如果手欠改为0，对运行结果有影响吗？</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>input<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>input<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span>input<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//如果是一个符合要求的子串：</span><span class="token punctuation">&#123;</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//增加计数器。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>cnt<span class="token operator">></span>ans_cnt<span class="token punctuation">)</span><span class="token comment">//打擂台。</span><span class="token punctuation">&#123;</span>ans_cnt<span class="token operator">=</span>cnt<span class="token punctuation">;</span>ans_i<span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token comment">//更新答案。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>cout<span class="token operator">&lt;&lt;</span>input<span class="token punctuation">[</span>ans_i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span>input<span class="token punctuation">[</span>ans_i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、思考题答案"><a href="#三、思考题答案" class="headerlink" title="三、思考题答案"></a>三、思考题答案</h3><p>Q1：别忘了两行之前 <code>int i=0</code> 中的 <code>i</code> 所指的字符串也是子串之一！</p><p>Q2：无影响。因为运行结果不打印子串的出现次数。</p><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51630260">https://www.luogu.com.cn/record/51630260</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 暴力与模拟 </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0887B题解</title>
      <link href="/2021-07-01-LuoguCF0887BTJ/"/>
      <url>/2021-07-01-LuoguCF0887BTJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题意简述"><a href="#一、题意简述" class="headerlink" title="一、题意简述"></a>一、题意简述</h3><p>给出 $n$ 个方块，每个方块有 $6$ 个面，每个面都有一个数字。求一个数，使得从 $1$ 到这个数都可以使用这些方块所拼成。</p><p>数字 $6$ 不能通过颠倒的方式变成 $9$，同理，$9$ 也不能变成 $6$。</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>枚举每种可能，并记录下来。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>cube<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> can_make<span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//存储结果。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//输入方块。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">6</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>cube<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i1<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i1<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举第一个方块的编号。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i2<span class="token operator">&lt;=</span><span class="token number">6</span><span class="token punctuation">;</span>i2<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举第一个方块使用的数。</span><span class="token punctuation">&#123;</span>can_make<span class="token punctuation">[</span>cube<span class="token punctuation">[</span>i1<span class="token punctuation">]</span><span class="token punctuation">[</span>i2<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//记录。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j1<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j1<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举第二个方块的编号。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>j1<span class="token operator">==</span>i1<span class="token punctuation">)</span><span class="token comment">//确保第一个方块与第二个方块不是一个方块。</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j2<span class="token operator">&lt;=</span><span class="token number">6</span><span class="token punctuation">;</span>j2<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举第二个方块使用的数。</span><span class="token punctuation">&#123;</span>can_make<span class="token punctuation">[</span>cube<span class="token punctuation">[</span>i1<span class="token punctuation">]</span><span class="token punctuation">[</span>i2<span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span>cube<span class="token punctuation">[</span>j1<span class="token punctuation">]</span><span class="token punctuation">[</span>j2<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//记录。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>can_make<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//如果一个数不能被拼成：</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出前一个数。</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51620359">https://www.luogu.com.cn/record/51620359</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA13109题解</title>
      <link href="/2021-07-01-LuoguUVA13109TJ/"/>
      <url>/2021-07-01-LuoguUVA13109TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题意简述"><a href="#一、题意简述" class="headerlink" title="一、题意简述"></a>一、题意简述</h3><p>第一行给出一个数 $T$，代表数据的组数。</p><p>接下来 $T$ 组数据，给出一行 $2$ 个整数 $M$ 和 $W$，再给出一行 $M$ 个整数，请问：在这 $M$ 个数中，选择尽可能多的数，加起来小于或等于 $W$，那么最多选择多少个数？</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>首先明确一点：被选择的数越小，可选择的数就越多。因此，我们应该干什么？排序！</p><p>但问题是，$1\le M\le10^5$，这个数据范围太大了，使用传统的冒泡排序铁定超时。</p><p>然后我们再看，$1\le w_i\le10000$，疯狂暗示我们使用桶排序。</p><p>于是，我们设 $input[i]$ 代表数 $i$ 出现了多少次，完整代码就出来了。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-none"><code class="language-none">#include&lt;cstdio&gt;#include&lt;cstring&gt;using namespace std;int m,w;int input[10001];&#x2F;&#x2F;桶排序。int main()&#123;int t;scanf(&quot;%d&quot;,&amp;t);for(int task&#x3D;1;task&lt;&#x3D;t;task++)&#123;memset(input,0,sizeof(input));&#x2F;&#x2F;全部重置为0。scanf(&quot;%d%d&quot;,&amp;m,&amp;w);for(int i&#x3D;1;i&lt;&#x3D;m;i++)&#x2F;&#x2F;输入。&#123;int x;scanf(&quot;%d&quot;,&amp;x);input[x]++;&#x2F;&#x2F;出现次数加一。&#125;int cnt&#x3D;0,sum&#x3D;0;&#x2F;&#x2F;cnt代表可以被选择的数的数量，sum代表当前被选择的数之和。bool flag&#x3D;true;for(int i&#x3D;1;i&lt;&#x3D;10000&amp;&amp;flag;i++)&#123;for(int j&#x3D;1;j&lt;&#x3D;input[i];j++)&#123;if(sum+i&gt;w)&#123;printf(&quot;%d\n&quot;,cnt);&#x2F;&#x2F;中断，输出。flag&#x3D;false;break;&#125;else&#123;cnt++;&#x2F;&#x2F;一遍一遍地加。sum+&#x3D;i;&#125;&#125;&#125;if(flag)&#x2F;&#x2F;可以选择全部数字：&#123;printf(&quot;%d\n&quot;,cnt);&#x2F;&#x2F;输出。&#125;&#125;return 0;&#x2F;&#x2F;完结撒花！&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51618765">https://www.luogu.com.cn/record/51618765</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
            <tag> 桶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0008B题解</title>
      <link href="/2021-06-30-LuoguCF0008BTJ/"/>
      <url>/2021-06-30-LuoguCF0008BTJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p><strong>需要注意，这里的机器人并不是在走没有东西的地图，它是在走有障碍的地图，所以它可能会被迫往回走。</strong></p><p>机器人可以往回走，有些是为了躲避障碍，有些就是吃饱了撑着。</p><p>如何判断一个机器人的往回走是否有效？</p><p>分两种情况。</p><ol><li><p>同一个格子，机器人走了 $2$ 次。</p><p>如图。</p><p><img src="https://z3.ax1x.com/2021/06/30/RBgx74.png" alt=""></p><p>显然，与其按照这个路线走，不如走 $1\Rightarrow2\Rightarrow6$ 的路线。</p></li><li><p>走到某一个格子，此时对于四周的格子，除了刚刚走过来的格子以外，其它三个格子已经有 $1$ 个走过了。</p><p>如图。</p><p><img src="https://z3.ax1x.com/2021/06/30/RB2i1x.png" alt=""></p><p>显然，与其按照这个路线走，不如走 $1\Rightarrow4$ 的路线。</p></li></ol><p>由此，我们可以模拟每一步走法，并进行判断。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> MAXN<span class="token operator">=</span><span class="token number">205</span><span class="token punctuation">;</span><span class="token keyword">int</span> graph<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//记录一个格子是否走过。</span><span class="token keyword">char</span> input<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> x<span class="token operator">=</span>MAXN<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>y<span class="token operator">=</span>MAXN<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//将初始x与y都赋值为地图中央。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>graph<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> move<span class="token operator">=</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>move<span class="token operator">==</span><span class="token string">'U'</span><span class="token punctuation">)</span><span class="token comment">//移动，修改坐标。</span><span class="token punctuation">&#123;</span>x<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>move<span class="token operator">==</span><span class="token string">'D'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>x<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>move<span class="token operator">==</span><span class="token string">'L'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>y<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>move<span class="token operator">==</span><span class="token string">'R'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>y<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//对应情况1。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"BUG\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">+</span>graph<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">+</span>graph<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>graph<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//对应情况2。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"BUG\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>graph<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//标记已走过。</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"OK\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51614002">https://www.luogu.com.cn/record/51614002</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA13012题解</title>
      <link href="/2021-06-30-LuoguUVA13012TJ/"/>
      <url>/2021-06-30-LuoguUVA13012TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题意简述"><a href="#一、题意简述" class="headerlink" title="一、题意简述"></a>一、题意简述</h3><p>给出一个数 $T$，代表这杯茶的种类。</p><p>再给出五个数，询问这五个数中，有几个数等于 $T$？</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>没啥好讲的。。。一个个比对即可。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> t<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>e<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d%d%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>t<span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span><span class="token operator">&amp;</span>b<span class="token punctuation">,</span><span class="token operator">&amp;</span>c<span class="token punctuation">,</span><span class="token operator">&amp;</span>d<span class="token punctuation">,</span><span class="token operator">&amp;</span>e<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> cnt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//计数器。</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>a<span class="token punctuation">)</span><span class="token comment">//比对。</span><span class="token punctuation">&#123;</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>d<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>cnt<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51595257">https://www.luogu.com.cn/record/51595257</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA11679题解</title>
      <link href="/2021-06-30-LuoguUVA11679TJ/"/>
      <url>/2021-06-30-LuoguUVA11679TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题意简述"><a href="#一、题意简述" class="headerlink" title="一、题意简述"></a>一、题意简述</h3><p>有 $B$ 家银行，每一家银行都有一个初始的财产数额。有 $N$ 次操作，每一次操作包含三个数：$D$，$C$，$V$，表示从编号为 $D$ 的银行向编号为 $C$ 的银行移动 $V$ 个单位财产。最后，如果有一个银行的财产数额为负数，输出 <code>N</code>，否则输出 <code>S</code>。</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>暴力模拟。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>m<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//判定退出条件。</span><span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> input<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> from<span class="token punctuation">,</span>to<span class="token punctuation">,</span>v<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>from<span class="token punctuation">,</span><span class="token operator">&amp;</span>to<span class="token punctuation">,</span><span class="token operator">&amp;</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>input<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token operator">-=</span>v<span class="token punctuation">;</span><span class="token comment">//移动。</span>input<span class="token punctuation">[</span>to<span class="token punctuation">]</span><span class="token operator">+=</span>v<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">bool</span> flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"S\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"N\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51595081">https://www.luogu.com.cn/record/51595081</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA10071题解</title>
      <link href="/2021-06-28-LuoguUVA10071TJ/"/>
      <url>/2021-06-28-LuoguUVA10071TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题意简述"><a href="#一、题意简述" class="headerlink" title="一、题意简述"></a>一、题意简述</h3><p>粒子从静止到加速到速度为 $v$ 需要 $t$ 的时间，求粒子运动 $2\times t$ 时间后运动了多远。</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>参考一下<a href="https://baike.baidu.com/item/%E5%8C%80%E5%8A%A0%E9%80%9F%E8%BF%90%E5%8A%A8/10607524?fr=aladdin">这篇百度百科</a>，可以得出，设匀加速运动初速为 $v0$（本题中为 $0$），最后速度为 $v1$（本题中为输入的 $v$），时间为 $t$，加速度为 $a$，运动距离为 $x$，则：</p><p>$a=(v1-v0)\div t$</p><p>$=v1\div t$</p><p>$x=v0\times t+\frac{1}{2}\times a \times t^2$</p><p>$=\frac{1}{2}\times (v1\div t) \times t^2$</p><p>$=\frac{1}{2}\times v1\times t$</p><p>然而，题目中求的是运动时间为 $2t$ 的运动距离。根据匀加速运动的路程公式，时间扩大至原来的 $2$ 倍，路程扩大至原来的 $4$ 倍。</p><p>由此得出本题的解答公式：$2\times v\times t$。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> v<span class="token punctuation">,</span>t<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>v<span class="token punctuation">,</span><span class="token operator">&amp;</span>t<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>v<span class="token operator">*</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51594406">https://www.luogu.com.cn/record/51594406</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00913题解</title>
      <link href="/2021-06-28-LuoguUVA00913TJ/"/>
      <url>/2021-06-28-LuoguUVA00913TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题目翻译"><a href="#一、题目翻译" class="headerlink" title="一、题目翻译"></a>一、题目翻译</h3><h4 id="题目描述翻译"><a href="#题目描述翻译" class="headerlink" title="题目描述翻译"></a>题目描述翻译</h4><p>Joana 喜欢玩奇数。一天，她开始了书写。在每一行，她写下了一个又一个奇数。就像下面这样：</p><p>$1$</p><p>$3,5,7$</p><p>$9,11,13,15,17$</p><p>$19,21,23,25,27,29,31$</p><p>$…$</p><p>在某一行，Joana 写下了 $55$ 个奇数。你能找出这一行的最后 $3$ 个奇数之和吗？一般地，给你一个数代表某一行奇数的个数，你能找出这一行的最后 $3$ 个奇数之和吗？</p><p>输入的每一行会给出一个数 $N$ 代表某一行的奇数的个数，你的任务就是找出这一行的最后 $3$ 个奇数之和。</p><h4 id="输入格式翻译"><a href="#输入格式翻译" class="headerlink" title="输入格式翻译"></a>输入格式翻译</h4><p>输入有多行，每一行是一个数 $N$（$1&lt;N&lt;1000000000$），意义如题目描述。</p><h4 id="输出格式翻译"><a href="#输出格式翻译" class="headerlink" title="输出格式翻译"></a>输出格式翻译</h4><p>对于每一个输入，输出一个数，代表奇数个数为 $N$ 的那一行的最后 $3$ 个奇数之和。保证答案小于 $2^{63}$。</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>不必死算。</p><p>首先，我们先算出，Joana 到目前为止写下了多少个奇数？</p><p>我们可以推算出，Joana 写下了 $(N+1)\div2$ 行，使用等差数列求和公式就可以得出 Joana 写下了 $((N+1)\times(N+1)\div2)\div2$ 个奇数，记为 $A$。</p><p>然后，Joana 到目前为止写下的最后一个奇数是多少？不难推算出是 $A\times2-1$，再依次推算得出答案为 $(A\times2-1)+(A\times2-3)+(A\times2-5)$。</p><p>于是我们就可以得出代码。鉴于数据范围较大，请务必使用 <code>long long</code> 数据结构，并使用位运算代替乘法。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">long</span> <span class="token keyword">long</span> N<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>N<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">long</span> <span class="token keyword">long</span> odd_number<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>N<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">(</span>odd_number<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>odd_number<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>odd_number<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51593635">https://www.luogu.com.cn/record/51593635</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0096B题解</title>
      <link href="/2021-06-28-LuoguCF0096BTJ/"/>
      <url>/2021-06-28-LuoguCF0096BTJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题可以使用<a href="https://baike.baidu.com/item/%E5%AE%BD%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/5224802?fromtitle=BFS&amp;fromid=542084&amp;fr=aladdin">宽度优先搜索</a>去做。</p><p>我们可以一步步枚举只含有 $4$ 和 $7$ 的数字，每一次增加 $4$ 或 $7$ 作为扩展，直到找到符合要求的数字为止。</p><p>本题 $1\le n\le10^9$，并不是很大，但是需要使用 <code>long long</code> 数据结构。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;queue></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">int</span> <span class="token expression"><span class="token keyword">long</span> <span class="token keyword">long</span></span><span class="token comment">//一劳永逸。</span></span><span class="token keyword">int</span> n<span class="token punctuation">;</span>queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span>num_list<span class="token punctuation">;</span><span class="token comment">//BFS队列。</span><span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span><span class="token comment">//检查数据是否符合要求。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token operator">&lt;</span>n<span class="token punctuation">)</span><span class="token comment">//太小，不可能。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> temp<span class="token operator">=</span>num<span class="token punctuation">;</span><span class="token keyword">int</span> cnt_4<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>cnt_7<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token comment">//数数位。</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> digit<span class="token operator">=</span>temp<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>temp<span class="token operator">/=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>digit<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cnt_4<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>digit<span class="token operator">==</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cnt_7<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>cnt_4<span class="token operator">==</span>cnt_7<span class="token punctuation">)</span><span class="token comment">//4与7的数量一致：</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">signed</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>num_list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先让0进队，占个位置。</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>num_list<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> num<span class="token operator">=</span>num_list<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//取数。</span>num_list<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出。</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span>num_list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>num_list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//思考：以上两行是否可以互换？</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、思考题答案"><a href="#三、思考题答案" class="headerlink" title="三、思考题答案"></a>三、思考题答案</h3><p>当然不行。因为，如果互换，因为只要 $num\ge0$，就有 $num\times10+4&lt;num\times10+7$，而互换代码就导致输出的数字可能不是最小的，而是第二小的。</p><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51569117">https://www.luogu.com.cn/record/51569117</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BFS宽度优先搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷P2757题解</title>
      <link href="/2021-06-28-LuoguP2757TJ/"/>
      <url>/2021-06-28-LuoguP2757TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题可以使用桶去做。</p><p>设 $array[i]$ 为输入的第 $i$ 个数。</p><p>设 $tong[i]$ 为数字 $i$ 在输入中的出现位置。因为输入的每个数字都不一样，所以此方法可行。</p><p>然后枚举两个数：$i$ 和 $j$ 并保证 $i&lt;j$。根据等差数列的性质，第二个数减第一个数为公差，第三个数减第二个数也是公差，所以第三个数就是第二个数减第一个数加第二个数。</p><p>而“第一个数”就是 $array[i]$，“第二个数”就是 $array[j]$，如果 $array[j]-array[i]+array[j]$ 存在并且所在位置大于 $j$，即可输出“Y”。</p><p>如果枚举过后没有找到答案，则输出“N”。</p><p>在最坏情况下，时间复杂度为 $O(T\times N\times (N-1) \div2)$，如果 $T=7$ 且 $N=10000$，则时间复杂度为 $O(349965000)$，有点悬，但还是可以过的。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> t<span class="token punctuation">;</span><span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token number">1000000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>tong<span class="token punctuation">[</span><span class="token number">1000000</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>t<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">memset</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//清空数组。</span><span class="token function">memset</span><span class="token punctuation">(</span>tong<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>tong<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tong<span class="token punctuation">[</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token comment">//存储桶。</span><span class="token punctuation">&#125;</span><span class="token keyword">bool</span> flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>flag<span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token operator">&amp;&amp;</span>flag<span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>tong<span class="token punctuation">[</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">-</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">></span>j<span class="token punctuation">)</span><span class="token comment">//如果符合要求：</span><span class="token punctuation">&#123;</span>flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Y\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出Y。</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"N\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出N。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>这道题我花了几十分钟才做出来，但其实不难，大概是绿题或蓝题的水平。</p><p>记录：<a href="https://www.luogu.com.cn/record/50300561">https://www.luogu.com.cn/record/50300561</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
            <tag> 桶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0920题解</title>
      <link href="/2021-06-28-LuoguCF0920ATJ/"/>
      <url>/2021-06-28-LuoguCF0920ATJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>设 $garden[i]$ 为第 $i$ 个方块的浇水所需时间。</p><p>本题可以在每次读入水龙头位置 $x$ 时，可以先把 $garden[x]$ 设为 $1$，然后遍历整个 $garden$ 数组，如果 $garden[i]&lt;abs(x-i)+1$，那么就把 $garden[i]$ 更新为 $abs(x-i)+1$。</p><p>最后，输出 $garden$ 的最大值。</p><p>时间复杂度是 $O(t\times k\times n^2+n)$，在最坏情况下（$t=k=n=200$），时间复杂度是 $O(8000200)$，也不算太大。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> t<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> time<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>time<span class="token operator">&lt;=</span>t<span class="token punctuation">;</span>time<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>k<span class="token punctuation">;</span><span class="token keyword">int</span> garden<span class="token punctuation">[</span><span class="token number">205</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//初始化。思考：为什么garden要被初始化为那么大的数值？</span><span class="token punctuation">&#123;</span>garden<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">387836</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> x<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>garden<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//水龙头所在位置，浇水时间为1。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>x<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//水龙头所在位置之前。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>garden<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>x<span class="token operator">-</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>garden<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>x<span class="token operator">-</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//水龙头所在位置之后。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>garden<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>j<span class="token operator">-</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>garden<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>j<span class="token operator">-</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//遍历，求最大值。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>garden<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">></span>ans<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>ans<span class="token operator">=</span>garden<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、思考题答案"><a href="#三、思考题答案" class="headerlink" title="三、思考题答案"></a>三、思考题答案</h3><p>不难理解，因为在读入水龙头位置时取最小值，如果初始化的值比真实情况还要小，就有可能出现错误的答案。</p><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51525485">https://www.luogu.com.cn/record/51525485</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF1006C题解</title>
      <link href="/2021-06-28-LuoguCF1006CTJ/"/>
      <url>/2021-06-28-LuoguCF1006CTJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题 $1\le n\le2\times10^5$，数据范围并不大，不需要二分，但需要前缀和优化。</p><p>我们可以维护两个变量：$a$ 和 $c$，意义与题目所述相同。</p><p>然后循环，根据 $a$ 和 $c$ 计算出 $sum_1$ 与 $sum_3$ 的值，比较一下，出现以下 $3$ 种情况。</p><ol><li><p>$sum_1=sum_3$，此时：</p><ol><li><p>如果 $sum_1&gt;ans$，更新 $ans$。</p></li><li><p>将 $a$ 加 $1$，同时将 $c$ 加 $1$。</p></li></ol></li><li><p>$sum_1&lt;sum_3$，此时将 $a$ 加 $1$。</p></li><li><p>$sum_1&gt;sum_3$，此时将 $c$ 加 $1$。</p></li></ol><p>直到 $a+c&gt;n$ 时，说明“第一部分”和“第三部分”有重合，此时退出循环并输出结果。</p><p>另外，由于 $ans$ 已被初始化为 $0$，所以如果始终没有出现 $sum_1=sum_3$ 的情况，将输出 $0$。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> input<span class="token punctuation">[</span><span class="token number">200005</span><span class="token punctuation">]</span><span class="token punctuation">,</span>pre<span class="token punctuation">[</span><span class="token number">200005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//input负责存储输入，pre负责维护前缀和。</span><span class="token keyword">int</span> a<span class="token punctuation">,</span>c<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> ans<span class="token punctuation">;</span><span class="token comment">//十年OI一场空，不开long long见祖宗。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pre<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>pre<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//计算前缀和。</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>a<span class="token operator">+</span>c<span class="token operator">&lt;=</span>n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">long</span> <span class="token keyword">long</span> sum_a<span class="token operator">=</span>pre<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//其实这里的完整版是pre[a]-pre[0]，因为pre[0]=0，所以省略了。</span><span class="token keyword">long</span> <span class="token keyword">long</span> sum_c<span class="token operator">=</span>pre<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">-</span>pre<span class="token punctuation">[</span>n<span class="token operator">-</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>sum_a<span class="token operator">==</span>sum_c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ans<span class="token operator">&lt;</span>sum_a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>ans<span class="token operator">=</span>sum_a<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>a<span class="token operator">++</span><span class="token punctuation">;</span>c<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sum_a<span class="token operator">&lt;</span>sum_c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>a<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sum_a<span class="token operator">></span>sum_c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>c<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51499255">https://www.luogu.com.cn/record/51499255</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00151题解</title>
      <link href="/2021-06-28-LuoguUVA00151TJ/"/>
      <url>/2021-06-28-LuoguUVA00151TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、基本思路"><a href="#一、基本思路" class="headerlink" title="一、基本思路"></a>一、基本思路</h3><p>本题考察<a href="https://baike.baidu.com/item/%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98/3857719?fromtitle=%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF&amp;fromid=348830&amp;fr=aladdin">约瑟夫环</a>的知识。</p><p>数据范围是 $13\le N &lt;100$，还算比较小，可以暴力模拟。</p><h3 id="二、具体思路"><a href="#二、具体思路" class="headerlink" title="二、具体思路"></a>二、具体思路</h3><p>现在的问题是，如何暴力模拟约瑟夫环。</p><p>我们可以创建一个队列，初始状态下，该队列从队头到队尾依次为 $1$ 到 $N$。</p><p>然后循环以下操作，直到队列中只有一个数字。</p><ol><li><p>弹出队头，并不再进入队列中。</p></li><li><p>将一个数弹出队头，但立即进入队尾。本步骤重复 $m-1$ 次。</p></li></ol><p>该队列中只有一个数字时，这个数字就是“最后一个出列的数字”。只需判断这是不是 $13$ 即可。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> queue<span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>front<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>back<span class="token operator">=</span>n<span class="token punctuation">;</span><span class="token comment">//queue代表队列数组，front代表队头指针，back代表队尾指针。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token comment">//初始化。</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>back<span class="token operator">!=</span>front<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//当back=front时，队列中只剩一个数字。</span><span class="token punctuation">&#123;</span>front<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//执行上面的步骤1。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//重复执行上面的步骤2。</span><span class="token punctuation">&#123;</span>back<span class="token operator">++</span><span class="token punctuation">;</span>queue<span class="token punctuation">[</span>back<span class="token punctuation">]</span><span class="token operator">=</span>queue<span class="token punctuation">[</span>front<span class="token punctuation">]</span><span class="token punctuation">;</span>front<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> queue<span class="token punctuation">[</span>front<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">13</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>m<span class="token operator">&lt;=</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>m<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51405789">https://www.luogu.com.cn/record/51405789</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA10583题解</title>
      <link href="/2021-06-28-LuoguUVA10583TJ/"/>
      <url>/2021-06-28-LuoguUVA10583TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题考察并查集。</p><p>在每组数据的一开始，先把 $ans$ 设为 $n$，我们可以在每次连边之前，检查一下连边的两个点是不是已经连通。如果不是，$ans$ 减 $1$，并将并查集的这两个点合并。最后输出 $ans$ 即可。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>case_id<span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token punctuation">;</span><span class="token keyword">int</span> father<span class="token punctuation">[</span><span class="token number">50005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//并查集。</span><span class="token keyword">int</span> <span class="token function">find_father</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token comment">//寻找祖先。</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> father<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">find_father</span><span class="token punctuation">(</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>m<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//退出条件判定。</span><span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>ans<span class="token operator">=</span>n<span class="token punctuation">;</span><span class="token comment">//初始化ans。</span>case_id<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//初始化并查集数组。</span><span class="token punctuation">&#123;</span>father<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>x<span class="token punctuation">,</span><span class="token operator">&amp;</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> u<span class="token operator">=</span><span class="token function">find_father</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token operator">=</span><span class="token function">find_father</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//寻找这两个点的祖先。</span><span class="token keyword">if</span><span class="token punctuation">(</span>u<span class="token operator">!=</span>v<span class="token punctuation">)</span><span class="token comment">//祖先不一致，两个点并未连通，则连边。</span><span class="token punctuation">&#123;</span>ans<span class="token operator">--</span><span class="token punctuation">;</span>father<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">=</span>v<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Case %d: %d\n"</span><span class="token punctuation">,</span>case_id<span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51480327">https://www.luogu.com.cn/record/51480327</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA00108题解</title>
      <link href="/2021-06-28-LuoguUVA00108TJ/"/>
      <url>/2021-06-28-LuoguUVA00108TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、粗略思路-amp-前置芝士"><a href="#一、粗略思路-amp-前置芝士" class="headerlink" title="一、粗略思路&amp;前置芝士"></a>一、粗略思路&amp;前置芝士</h3><p>本题的数据范围是 $N\le100$，可以使用<a href="https://blog.csdn.net/qq_34990731/article/details/82807870">二维前缀和</a>去做。</p><p>二维前缀和有一个关键数组，命名为 $pre$。其中 $pre[i][j]$ 表示第 $i$ 行第 $j$ 列的二维前缀和。</p><p>设 $input[i][j]$ 是题目中的输入矩阵第 $i$ 行第 $j$ 列。</p><p>二维前缀和有两个关键公式。</p><ol><li>求二维前缀和：计算公式为$pre[i][j]=pre[i-1][j]+pre[i][j-1]-pre[i-1][j-1]+input[i][j]$。此步骤可以在输入时去做。</li><li>求二维区间和：设左上角端点位于第 $x1$ 行第 $y1$ 列，右上角端点位于第 $x2$ 行第 $y2$ 列，则求出此区间之和的计算公式为 $sum=pre[x2][y2]+pre[x1-1][y1-1]-pre[x2][y1-1]-pre[x1-1][y2]$。</li></ol><p>使用二维前缀和之后，每一次查询二维区间和的操作的时间复杂度就降到了 $O(1)$，大大加快了不少。</p><h3 id="二、具体思路"><a href="#二、具体思路" class="headerlink" title="二、具体思路"></a>二、具体思路</h3><p>本题要求一个子矩阵，这个子矩阵中的数之和最大。</p><p>那么，我们可以使用 $O(N^2)$ 的时间复杂度进行输入&amp;预处理二维前缀和，然后再使用小于 $O(N^4)$ 的时间复杂度进行枚举，总时间复杂度在最坏情况下（$N=100$）小于 $O(100010000)$，$3s$ 的时间绝对足够。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><p>还是那句话：道路千万条，诚信第一条。直接抄题解，棕名两行泪。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> input<span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">,</span>pre<span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//input为输入数组，pre为二维前缀和数组。</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token operator">-</span><span class="token number">999999</span><span class="token punctuation">;</span><span class="token comment">//ans一定要设置成很小的值，因为答案有可能为负数，ans的初始值不能为0。</span><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token comment">//定义max函数求两个数的最大值。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> a<span class="token operator">></span>b<span class="token operator">?</span>a<span class="token operator">:</span>b<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入n。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入矩阵。</span>pre<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>pre<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>pre<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pre<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//计算二维前缀和。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> x1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>x1<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>x1<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举左上角端点。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> y1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>y1<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>y1<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> x2<span class="token operator">=</span>x1<span class="token punctuation">;</span>x2<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>x2<span class="token operator">++</span><span class="token punctuation">)</span>枚举右下角端点。<span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> y2<span class="token operator">=</span>y1<span class="token punctuation">;</span>y2<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>y2<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>ans<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>pre<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token operator">+</span>pre<span class="token punctuation">[</span>x1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pre<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pre<span class="token punctuation">[</span>x1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//计算二维区间和，并与ans取最大值。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51405789">https://www.luogu.com.cn/record/51405789</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷UVA10000题解</title>
      <link href="/2021-06-28-LuoguUVA10000TJ/"/>
      <url>/2021-06-28-LuoguUVA10000TJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>本题中 $n \le 100$，数据量不大，可以用<a href="https://baike.baidu.com/item/Floyd%E7%AE%97%E6%B3%95/291990?fr=aladdin">弗洛伊德最短路算法</a>去做。</p><p>Q1：等等，Floyd 不是最短路算法吗？怎么能解决本题最长路？</p><p>A1：那就魔改一下。</p><p>Q2：如何魔改？</p><p>A2：从算法精髓入手。</p><h3 id="二、代码片段"><a href="#二、代码片段" class="headerlink" title="二、代码片段"></a>二、代码片段</h3><p>设 $distance[i][j]$ 为从点 $i$ 到点 $j$ 的距离。</p><p>Floyd 算法的精髓，就是<del>暴力</del>枚举一个点 $k$，如果发现 $distance[i][j] &lt; distance[i][k] + distance[k][j]$，那么就把 $distance[i][j]$ 更新为$distance[i][k] + distance[k][j]$。</p><p>发现端倪了吗？</p><p>求最长路，就是把上面的思路稍微改一改：如果发现 $distance[i][j] &gt; distance[i][k] + distance[k][j]$，那么就把 $distance[i][j]$ 更新为$distance[i][k] + distance[k][j]$。</p><p>因此我们得出了核心代码。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>distance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>distance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>distance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">+</span>distance<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初始化部分也改一下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>distance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">==</span>j<span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">999999</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Q3：第3行，当两点不存在路径时，距离为无限小。但是，为什么当 $i = j$ 时，距离为0而不是无限小呢？</p><p>A3：自行思考，文末会讲。</p><p>终于，我们得出了完整代码。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><p>还是那句话：道路千万条，诚信第一条。直接抄题解，棕名两行泪。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token comment">//求两个数较大的那个。</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> a<span class="token operator">></span>b<span class="token operator">?</span>a<span class="token operator">:</span>b<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//负责表示当前计算到第几组数据了。</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>t<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//负责表示当前计算到第几组数据了。</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>start<span class="token punctuation">;</span><span class="token comment">//n代表点数，start代表起点。</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入n。</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//如果n为0：</span><span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//退出。</span><span class="token punctuation">&#125;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入起点。</span><span class="token keyword">int</span> distance<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//创建distance数组。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>distance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">==</span>j<span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">999999</span><span class="token punctuation">;</span><span class="token comment">//初始化，设distance[i][j]为无限小（i!=j）或0（i=j）。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> a<span class="token punctuation">,</span>b<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入一边的端点。</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>b<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//当a和b均为0时：</span><span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//退出输入。</span><span class="token punctuation">&#125;</span>distance<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//这里的边权都是1。</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>distance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>distance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>distance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">+</span>distance<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不断更新距离数组。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//得出答案部分。</span><span class="token keyword">int</span> to<span class="token punctuation">,</span>dis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>distance<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">></span>dis<span class="token punctuation">)</span><span class="token comment">//打擂台。如果从起点到某一点的距离大于当前距离：</span><span class="token punctuation">&#123;</span>dis<span class="token operator">=</span>distance<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//更新距离数据。</span>to<span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token comment">//更新终点数据。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Case %d: The longest path from %d has length %d, finishing at %d.\n\n"</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>start<span class="token punctuation">,</span>dis<span class="token punctuation">,</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。记得要2个换行！</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、思考题答案"><a href="#四、思考题答案" class="headerlink" title="四、思考题答案"></a>四、思考题答案</h3><p>当 $i \ne j$ 时，起点和终点不同，所以在最初时距离自然是无限小。</p><p>但是，当 $i = j$ 时，起点和终点相同，相当于原地徘徊，距离就是0。</p><h3 id="五、后记"><a href="#五、后记" class="headerlink" title="五、后记"></a>五、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51351320">https://www.luogu.com.cn/record/51351320</a>。</p><p>不同于<a href="https://www.luogu.com.cn/blog/387840/solution-uva10000">这篇题解</a>，他的题解采用了负数边权，根据不等式的性质，</p><p>$\because a &gt; b$</p><p>$\therefore -a &lt; -b$</p><p>于是，求最长路就巧妙地转换成了最短路，输出时对结果取相反数。</p><p>By <a href="https://www.luogu.com.cn/user/387836"><strong>dengzijun</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> Floyd算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0934A题解</title>
      <link href="/2021-06-27-LuoguCF0934ATJ/"/>
      <url>/2021-06-27-LuoguCF0934ATJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>一看这数据范围，$2\le n,m\le50$，这完全可以使用暴力枚举。</p><p>再看这数据范围：</p><blockquote><p>数列中所有元素大小均在 $-10^9$ 到 $10^9$ 之间。</p></blockquote><p>这意味着什么？</p><p>当然是 <code>long long</code> 数据类型。</p><p>于是，我们就得到了完整代码。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> finally_ans<span class="token operator">=</span><span class="token number">1e18</span><span class="token punctuation">;</span><span class="token comment">//最终答案。</span><span class="token keyword">long</span> <span class="token keyword">long</span> temp_ans<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1e18</span><span class="token punctuation">;</span><span class="token comment">//循环一次的答案。</span><span class="token keyword">long</span> <span class="token keyword">long</span> input1<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">,</span>input2<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//输入的两个数列。</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> del<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>del<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>del<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//枚举要删除的数。</span><span class="token punctuation">&#123;</span>temp_ans<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1e18</span><span class="token punctuation">;</span><span class="token comment">//初始化。</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>del<span class="token punctuation">)</span><span class="token comment">//当前为要删除的数：</span><span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token comment">//跳过。</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>input2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>temp_ans<span class="token punctuation">)</span><span class="token comment">//更新temp_ans。</span><span class="token punctuation">&#123;</span>temp_ans<span class="token operator">=</span>input1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>input2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>temp_ans<span class="token operator">&lt;</span>finally_ans<span class="token punctuation">)</span><span class="token comment">//更新finally_ans。</span><span class="token punctuation">&#123;</span>finally_ans<span class="token operator">=</span>temp_ans<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>finally_ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、后记"><a href="#三、后记" class="headerlink" title="三、后记"></a>三、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51890174">https://www.luogu.com.cn/record/51890174</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0427A题解</title>
      <link href="/2021-06-27-LuoguCF0427ATJ/"/>
      <url>/2021-06-27-LuoguCF0427ATJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、题意简述"><a href="#一、题意简述" class="headerlink" title="一、题意简述"></a>一、题意简述</h3><p>其实这明明是一个警察与犯罪案件的题目，但题目翻译盖了个歪楼。</p><p>你有一个银行账户。现在银行账户里没有一分钱。</p><p>首先输入一个数 $n$，代表 $n$ 次操作。</p><p>接下来的一行有 $n$ 个数，第 $i$ 个数代表 $a_i$。</p><p>每个 $a_i$ 有两种可能：</p><ol><li><p>$a_i&gt;0$，此时往银行账户里充值 $a_i$ 元。</p></li><li><p>$a_i=-1$，此时银行账户扣 $1$ 元。如果银行账户根本没有钱扣除，那么透支金额加 $1$ 元。</p></li></ol><p>问：最后你透支了多少钱？</p><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><p>模拟即可。</p><h3 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> now_money<span class="token punctuation">,</span>ans<span class="token punctuation">;</span><span class="token comment">//now_money代表当前银行账户的存款，ans代表透支金额。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> input<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>now_money<span class="token operator">+=</span>input<span class="token punctuation">;</span><span class="token comment">//银行账户充值。</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>now_money<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>now_money<span class="token operator">--</span><span class="token punctuation">;</span><span class="token comment">//银行账户扣款。</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>ans<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//透支金额加1。</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出。</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51668629">https://www.luogu.com.cn/record/51668629</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力与模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷CF0934B题解</title>
      <link href="/2021-06-27-LuoguCF0934BTJ/"/>
      <url>/2021-06-27-LuoguCF0934BTJ/</url>
      
        <content type="html"><![CDATA[<h3 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h3><p>首先，本题中数字环最多的是 $8$，有 $2$ 个环。因此，在输出答案时，尽可能地使用 $8$。</p><p>如果 $k$ 可以被 $2$ 整除，那么输出 $k\div2$ 个 $8$。</p><p>如果不能，那么输出 $\left\lfloor k\div2\right\rfloor$ 个 $8$ 后，再输出一个 $4$。（不一定是 $4$，只要有且只有一个环就行。思考：$0$ 也有且只有一个环，那它行吗？）</p><p>注意，题目中要求答案不大 $10^{18}$，所以如果 $k&gt;36$，就说明至少输出 $19$ 个数字，超过了限制，所以直接输出 $-1$ 无解。</p><h3 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> k<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">></span><span class="token number">36</span><span class="token punctuation">)</span><span class="token comment">//特判。</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"-1\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//第一种情况。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>k<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token comment">//第二种情况。</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>k<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"4\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//完结撒花！</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、思考题答案"><a href="#三、思考题答案" class="headerlink" title="三、思考题答案"></a>三、思考题答案</h3><p>当然不行。</p><p>当 $k=1$ 时，将只输出 $0$。但是，题目要求<strong>正整数</strong>，而 $0$ 不是正数，所以不行。</p><h3 id="四、后记"><a href="#四、后记" class="headerlink" title="四、后记"></a>四、后记</h3><p>记录：<a href="https://www.luogu.com.cn/record/51667794">https://www.luogu.com.cn/record/51667794</a>。</p><p>By <a href="https://www.luogu.com.cn/user/387836">dengzijun</a></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷P7593题解</title>
      <link href="/2021-06-27-LuoguP7593TJ/"/>
      <url>/2021-06-27-LuoguP7593TJ/</url>
      
        <content type="html"><![CDATA[<p>这道题有点难。</p><p>首先，假设 $n=5$， $k=2$ ，此时 $s$ 可以从 $3$ 到 $9$ ，其它则不行。</p><p>设 $a$ 为数组 $1$ 到 $n$ 的前 $k$ 个数之和， $b$ 为数组 $1$ 到 $n$ 的后 $k$ 个数之和。</p><p>可以发现， $s$ 的范围就是从 $a$ 到 $b$ 。</p><p>发现这个规律，时空复杂度极小的代码应声而出。<br><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">int</span> <span class="token expression"><span class="token keyword">long</span> <span class="token keyword">long</span></span><span class="token comment">//一劳永逸</span></span><span class="token keyword">int</span> T<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>k<span class="token punctuation">;</span><span class="token keyword">int</span> s<span class="token punctuation">;</span><span class="token keyword">signed</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>T<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> t<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>t<span class="token operator">&lt;=</span>T<span class="token punctuation">;</span>t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld%lld%lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>k<span class="token punctuation">,</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>k<span class="token punctuation">)</span><span class="token operator">*</span>k<span class="token operator">/</span><span class="token number">2</span><span class="token operator">&lt;=</span>s<span class="token comment">/*计算a的值*/</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">-</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token operator">*</span>k<span class="token operator">/</span><span class="token number">2</span><span class="token operator">>=</span>s<span class="token comment">/*计算b的值*/</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Yes\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"No\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>还是那句话，十年OI一场空，不开long long见祖宗。</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷P7566题解</title>
      <link href="/2021-06-27-LuoguP7566TJ/"/>
      <url>/2021-06-27-LuoguP7566TJ/</url>
      
        <content type="html"><![CDATA[<p>我相信各位看到这道题，第一时间想到的就是暴力求解。其实这没有必要，可以先算出“M”“C”“O”“I”在兔子名字开头的次数，然后做小学奥数即可。</p><p>吃兔子有4种可能的方案。</p><div class="table-container"><table><thead><tr><th style="text-align:left">编号</th><th style="text-align:left">具体内容</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">吃MCO</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">吃ICO</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">吃MCI</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">吃MIO</td></tr></tbody></table></div><p>每一个方案的方案数都可以表示为对应的兔子名字首字母之积，再把这些积加起来即可。</p><p>废话少说，上代码！<br><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> rabbit_capital<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//统计首字母出现次数的数组。</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> temp<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>rabbit_capital<span class="token punctuation">[</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//统计首字母出现次数。</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'M'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'O'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">+</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'I'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'O'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">+</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'M'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'I'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">+</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'M'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'I'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token operator">*</span>rabbit_capital<span class="token punctuation">[</span><span class="token string">'O'</span><span class="token operator">-</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>注意，一定要开long long！正如一句话所说，十年OI一场空，不开long long见祖宗。</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021-06-27-hello-world/"/>
      <url>/2021-06-27-hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><iframe width="792" height="396" src="//player.bilibili.com/player.html?aid=672979537&bvid=BV1gU4y1t7eY&cid=333453703&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
